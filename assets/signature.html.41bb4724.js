import{_ as e,r as p,o,c,a as s,b as n,d as i,e as a}from"./app.f18319b0.js";const l="/sdk/static/digital-signature-1.png",u="/sdk/static/digital-signature-2.png",r="/sdk/static/digital-signature-3.png",d={},k=a('<h1 id="签名" tabindex="-1"><a class="header-anchor" href="#签名" aria-hidden="true">#</a> 签名</h1><p>tacos-sdk从新版v2.0.0版本开始，接入空间引擎将启用数字签名校验。为了保障数据的更加安全和私有化，所有上层项目应用调用sdk接口（http or websocket）都需要对指定信息做签名（前后端约定采用<strong>SHA256withRSA</strong>签名算法生成签名）并按要求携带签名信息，然后统一由数字空间验证签名合法性和有效性。</p><h2 id="接入步骤" tabindex="-1"><a class="header-anchor" href="#接入步骤" aria-hidden="true">#</a> 接入步骤</h2><h3 id="一、应用申请授权" tabindex="-1"><a class="header-anchor" href="#一、应用申请授权" aria-hidden="true">#</a> 一、应用申请授权</h3>',4),v={href:"http://192.168.118.168:22567/application/list",target:"_blank",rel:"noopener noreferrer"},g=s("strong",null,"appCode",-1),h=s("strong",null,"privateKey",-1),m=a('<p><img src="'+l+'" alt=""></p><p><img src="'+u+'" alt=""></p><p><img src="'+r+`" alt=""></p><h3 id="二、初始化连接透传appcode" tabindex="-1"><a class="header-anchor" href="#二、初始化连接透传appcode" aria-hidden="true">#</a> 二、初始化连接透传appCode</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    appCode<span class="token operator">:</span> <span class="token string">&quot;应用编码&quot;</span>；<span class="token comment">//此参数为必传项</span>
    request<span class="token operator">:</span> <span class="token punctuation">{</span>
      baseURL<span class="token operator">:</span> <span class="token string">&quot;&lt;应用接口根路径域名&gt;&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    socket<span class="token operator">:</span><span class="token punctuation">{</span>
      url<span class="token operator">:</span> <span class="token string">&quot;&lt;空间与设备通讯连接地址&gt;&quot;</span> <span class="token comment">// 指定websoket地址</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、全局拦截器拦截全局接口请求进行数字签名处理" tabindex="-1"><a class="header-anchor" href="#三、全局拦截器拦截全局接口请求进行数字签名处理" aria-hidden="true">#</a> 三、全局拦截器拦截全局接口请求进行数字签名处理</h3><h5 id="http请求拦截有两种处理方式" tabindex="-1"><a class="header-anchor" href="#http请求拦截有两种处理方式" aria-hidden="true">#</a> http请求拦截有两种处理方式</h5><p>前端生成数字签名方式：一般适用于纯前端项目，没有对应的业务后端。不建议这种方式（签名密钥放置前端有暴露安全风险）</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span> httpSignInterceptor<span class="token punctuation">,</span> Root <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> privateKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">-----BEGIN PRIVATE KEY-----
MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCVcQVHrjrJTcSrFUyCLlJnqJd8bIPG37OggdD4yLXJK6ryRqYK1jfxS45/MegoVRUUiDn//DogMMoBW4rv2WDPDG5P0jgU4gS/BjWdPDMc69bVRVomjQYg8Eoj+ipuJ4GzVVQZdSw8PNutKLUwW4kQP/57DCCDxh0VDwLVQ0W47ivrFZqwoiqj8SEWacxZiQAy0bkQJVtoRlkbLFCYLBylX+fI/aJUI+oFszxWIGvTlT//MB6nfBYPbC+EBZIow4xnAhpgyHKmFdh52SoZF1++0hqRH/SaZfW4i54iSIh2xsWUDHAPe3DyH+f/KaMggGtB8N6Z0NGi74u4anE4dx73AgMBAAECggEAJ4mWZweOoBHGNalV659LyAcPxSiEmMo4oP+XhSq9BbNa7+yHI5jXhiyCT96pWHpiMGN2TOazji66Uy+gC6MMfNsCGHY6xjOiI9QFvUrfDwjKdvR5THfFJlPMmcYnEau8IfEyZeXdRTaovCBoB5pAIh98OZvUwmhY62hkTH4W5T0bfz7JkUtgZL6aADkRaRZDIN6KZloiF4+1aQ4bzJfzE/02uTIrA4vvzDiHRfsJ8dLFr2oJBYaOoR1TauryX2cwln0FrR2Jl+91kd0NHvq8mEc6fYVLiX185fIoteb/RSa4kAUNBXz0dsoTHHMWExKb9hsDZgeQIXmUL7xnFgCkCQKBgQD7BSkl0qKz1Vj1TJtzfSayReTb3Po+gD/Ww9rHYS4Wb0guQBANWBF6Qd+PAn2VPkZmsTuG84RryIKG1RJE+2qVyuOgRU8BQgdrOEYsfAOT1TmD/zK2ubHASr46insH3c53EtPUt1NeNW4cS5ylxVa+YsIf6/RmI72S2AMcKLZSswKBgQCYZ/ql2rEGgdWYQA2abWPZ+or8oodH0POccrLlBjbjB1RaBJTf1GLS3H5NTmemGVXiSxScMqb5sxeZDx7O0XXXtnMiNnmu91hjlKi5Xz8A4w7avbEL37bgFZHCu+BiKnko6x38aZBp+A3h/OW7E4ubaOP8N2+xRdrDivudIqfUrQKBgBrCABLiEynsUiFD20ZCTv+t56lwMtS6wxNXqVibiVgm4KDdf1iMzMAliXkrIMvp6YNE3T2Tc8gxhYht6hakXkY9bGpHORa/PR82znQrfA4kKo9hgrxrqwD+dqyy2k6KXFnhDeec6ywdsfEeNkKNeKOuz1arxk+k+65NjHdR9611AoGADZXnP/WYpi3YrnO3QrbRmdK9pPuP95TmwmFvFP9S0TYMDOIvqywxiv5gu99rWeEUSNHMiofxXnzac6hnZKRDTvFSnhAhFLmzxVyxFaUp5phW8KTMLXTJxnvlvGgm/lku57jduWxnlSqpgiWbDOwXG8lj2U3PxQunDptLBpzaPRkCgYB6M7BRbSzyqixow8OrUbZZBHtt++rvbVthMtSdWaFajNCegNjdpigEa0ZvyF4P95Phz3beEw20IBvsxhX7FyJ4hp/vbLXXETtzIFxD90CX+uBsn1R1Stef0p5XS4PNowAvsx178jQ/cgOuWi5sYjP+Op1pXDxgo/QnqUqKzxXsKA==
-----END PRIVATE KEY-----
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>sdk<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    sdk<span class="token punctuation">.</span><span class="token function">interceptor</span><span class="token punctuation">(</span><span class="token string">&quot;ajax&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token function">httpSignInterceptor</span><span class="token punctuation">(</span>privateKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> root <span class="token operator">=</span> sdk<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> device <span class="token operator">=</span> <span class="token keyword">await</span> root<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Device<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/Office/devices/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>业务后端ng代理生成方式：数字签名由业务对应后端通过Nginx代理方式，服务端自行生成签名后再分配相应的token给业务方前端调用；<strong>推荐方式</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code> <span class="token operator">...</span>
 sdk<span class="token punctuation">.</span><span class="token function">interceptor</span><span class="token punctuation">(</span><span class="token string">&quot;ajax&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token operator">:</span> RequestConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">&quot;业务方自定约定的token请求头&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;token&quot;</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> config<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="websokcet请求拦截" tabindex="-1"><a class="header-anchor" href="#websokcet请求拦截" aria-hidden="true">#</a> websokcet请求拦截</h5><p>Tacos-sdk已经自动内置处理，业务方调用无须额外处理</p>`,13);function b(f,x){const t=p("ExternalLinkIcon");return o(),c("div",null,[k,s("p",null,[n("业务使用方在"),s("a",v,[n("空间管理平台"),i(t)]),n("中申请授权，获取到对应的应用编码"),g,n(", 以及授权私钥"),h]),m])}const q=e(d,[["render",b],["__file","signature.html.vue"]]);export{q as default};
