import{_ as t,r as o,o as p,c,a as s,b as n,d as e,e as l}from"./app.f18319b0.js";const i={},r=s("h1",{id:"空间",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#空间","aria-hidden":"true"},"#"),n(" 空间")],-1),u=s("em",null,[s("strong",null,"六个关键要素")],-1),d={href:"/digital/essentials/sixEssential.html#%E5%B8%83%E5%B1%80",target:"_blank",rel:"noopener noreferrer"},k={href:"/digital/essentials/sixEssential.html#%E8%AE%BE%E5%A4%87",target:"_blank",rel:"noopener noreferrer"},m={href:"/digital/essentials/sixEssential.html#%E8%A7%84%E5%88%99",target:"_blank",rel:"noopener noreferrer"},v={href:"/digital/essentials/sixEssential.html#%E8%AE%A1%E5%88%92",target:"_blank",rel:"noopener noreferrer"},h={href:"/digital/essentials/sixEssential.html#%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},g={href:"/digital/essentials/sixEssential.html#%E6%8C%87%E6%A0%87",target:"_blank",rel:"noopener noreferrer"},_=l(`<h3 id="实例化" tabindex="-1"><a class="header-anchor" href="#实例化" aria-hidden="true">#</a> 实例化</h3><p>通过<code>search</code>方法可获取 <code>Space</code> 实例对象</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span>Root<span class="token punctuation">,</span> Space<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tslfe/tacos-sdk&#39;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// ... 连接参数</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> core<span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> root <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> space <span class="token operator">=</span> <span class="token keyword">await</span> root<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Space<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;space tacos path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果已知空间的元数据，可以通过<code>createInstance</code>方法获取 <code>Space</code> 实例对象</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span>Root<span class="token punctuation">,</span> Space<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tslfe/tacos-sdk&#39;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// ... 连接参数</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> core<span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> space <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Space<span class="token punctuation">,</span> <span class="token punctuation">{</span>list<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// list 的值为空间元数据数组</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><p>查询到空间资源后，空间的实例对象已经包含了当前空间的所有六要素信息，可直接通过属性名称进行访问和管理。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// eg1: 获取类型为 glb 类型的布局信息</span>
<span class="token keyword">let</span> layout <span class="token operator">=</span> space<span class="token punctuation">.</span>layout<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;glb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// eg2: 切换为上班模式(已在Space Studio中添加了上班模式 onWork)</span>
space<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">&#39;onWork&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// eg3: 更多属性可参考: API下的Space</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),b={href:"/digital/api/space.html",target:"_blank",rel:"noopener noreferrer"};function f(E,y){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,s("p",null,[n("在 TacOS 中用空间来描述一个真实的物理环境，空间可以相互组合构造成一个更庞大的空间。在 TacOS 定义的空间中包含了 "),u,n(" ，分别为："),s("a",d,[n("布局"),e(a)]),n("、"),s("a",k,[n("设备"),e(a)]),n("、"),s("a",m,[n("规则"),e(a)]),n("、"),s("a",v,[n("计划"),e(a)]),n("、"),s("a",h,[n("模式"),e(a)]),n("、"),s("a",g,[n("指标"),e(a)]),n("。通过空间可以对下面的六要素进行查询和管理，也可以以空间为维度对空间的运行事件、设备状态进行订阅。")]),_,s("blockquote",null,[s("p",null,[n("参考："),s("a",b,[n("Space"),e(a)])])])])}const S=t(i,[["render",f],["__file","space.html.vue"]]);export{S as default};
