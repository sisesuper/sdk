import{_ as p,r as c,o as l,c as i,a as n,b as s,d as t,w as e,e as o}from"./app.f18319b0.js";const u={},r=o(`<h1 id="获取空间实例" tabindex="-1"><a class="header-anchor" href="#获取空间实例" aria-hidden="true">#</a> 获取空间实例</h1><h4 id="通过-search-方法获取-space-实例" tabindex="-1"><a class="header-anchor" href="#通过-search-方法获取-space-实例" aria-hidden="true">#</a> 通过 <code>search</code> 方法获取 <code>space</code> 实例</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span> Root <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Space <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 连接参数</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>core<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取root实例</span>
    <span class="token keyword">const</span> root <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span>
    <span class="token comment">// 获取空间实例</span>
    <span class="token keyword">const</span> space <span class="token operator">=</span> <span class="token keyword">await</span> root<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Space<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/Office&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),d=o(`<h4 id="通过-createinstance-方法获取-space-实例" tabindex="-1"><a class="header-anchor" href="#通过-createinstance-方法获取-space-实例" aria-hidden="true">#</a> 通过 <code>createInstance</code> 方法获取 <code>space</code> 实例</h4><p>如果已知空间的元数据，可以通过 <code>createInstance</code> 方法获取 <code>space</code> 实例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span> Root <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Space <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 连接参数</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>core<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取空间实例</span>
    <span class="token keyword">const</span> space <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Space<span class="token punctuation">,</span> <span class="token punctuation">{</span>list<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// list为空间元数据数组</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function k(m,v){const a=c("RouterLink");return l(),i("div",null,[r,n("blockquote",null,[n("p",null,[s("参考: "),t(a,{to:"/digital/help/declare.html#core"},{default:e(()=>[s("Core")]),_:1})])]),d,n("blockquote",null,[n("p",null,[s("参考: "),t(a,{to:"/digital/help/declare.html#core"},{default:e(()=>[s("Core")]),_:1})])])])}const b=p(u,[["render",k],["__file","getSpace.html.vue"]]);export{b as default};
