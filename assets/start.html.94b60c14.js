import{_ as e,r as t,o as p,c as l,a,b as n,d as c,e as i}from"./app.f18319b0.js";const o={},r=i(`<h1 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h1><h2 id="npm-yarn" tabindex="-1"><a class="header-anchor" href="#npm-yarn" aria-hidden="true">#</a> NPM/YARN</h2><p>在用DT-SDK构建大型应用时，推荐使用NPM或YARN。NPM和YARN能很好的和现代化的模块打包工具配合使用。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> dt-sdk <span class="token parameter variable">--save</span>
or 
<span class="token function">yarn</span> <span class="token function">add</span> dt-sdk <span class="token parameter variable">-S</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="脚手架" tabindex="-1"><a class="header-anchor" href="#脚手架" aria-hidden="true">#</a> 脚手架</h2><p>若正从零开始搭建项目，推荐使用前端统一团队脚手架<a href="">tsl-cli</a>进行项目创建，用脚手架创建项目时，只需选择包含DT-SDK的项目模板，该类项目模板已完成了DT-SDK的集成。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tsl-cli init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="组件库" tabindex="-1"><a class="header-anchor" href="#组件库" aria-hidden="true">#</a> 组件库</h2><p>若项目已经存在，且基于vue框架进行开发，推荐使用前端组件库<a href="">tsl-vue</a>，组件库中 已对DT-SDK进行了完整的组件封装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i tsl-vue <span class="token parameter variable">--save</span>
or
<span class="token function">yarn</span> <span class="token function">add</span> tsl-vue <span class="token parameter variable">-S</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用tsl-vue的组件库</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt-sdk</span> <span class="token attr-name">:config</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>config<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt-sdk</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>DtSdk<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;tsl-vue&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        DtSdk
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// DT-SDK渲染依赖的数据文件</span>
            <span class="token punctuation">}</span>       
        <span class="token punctuation">}</span>   
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),d={href:"/config",target:"_blank",rel:"noopener noreferrer"};function u(v,k){const s=t("ExternalLinkIcon");return p(),l("div",null,[r,a("p",null,[n("dt-sdk组件依赖的数据渲染配置请参考"),a("a",d,[n("config"),c(s)]),n("。")])])}const b=e(o,[["render",u],["__file","start.html.vue"]]);export{b as default};
