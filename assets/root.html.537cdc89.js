import{_ as p,r as c,o as l,c as i,a as n,b as s,d as t,w as e,e as o}from"./app.f18319b0.js";const u={},r=n("h1",{id:"root",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#root","aria-hidden":"true"},"#"),s(" Root")],-1),d=n("code",null,"Root",-1),k=n("code",null,"Space",-1),v=n("code",null,"Device",-1),h=n("code",null,"Mode",-1),m=n("code",null,"Rule",-1),b=n("code",null,"Plan",-1),g=n("code",null,"Layout",-1),_=o(`<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="devicedriver" tabindex="-1"><a class="header-anchor" href="#devicedriver" aria-hidden="true">#</a> deviceDriver()</h3><p>查询指定设备的驱动元数据</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">deviceDriver</span><span class="token punctuation">(</span>list<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>DeviceDriver<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),f=o(`<ul><li><p>参数</p><ul><li><p><code>list</code>: 设备驱动 <code>name</code> 数组</p><ul><li>若 <code>list</code> 为空，默认查所有设备驱动</li></ul></li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;DeviceDriver[]&gt;</code>: 设备驱动元数据数组集合</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span> Root <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>core<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> deviceDrivers <span class="token operator">=</span> <span class="token keyword">await</span> root<span class="token punctuation">.</span><span class="token function">deviceDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> search()</h3><p>基于 <code>tacosPath</code> 搜索相关具体SDK模块</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token function">search</span><span class="token punctuation">(</span>tacosPath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> spaceIds<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>TacosSDK <span class="token operator">&amp;</span> <span class="token constant">S</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),y=n("p",null,"参数",-1),w=n("p",null,[n("code",null,"tacosPath"),s(": "),n("code",null,"xpath"),s(" 路径【必传】")],-1),x=n("li",null,[n("p",null,[n("code",null,"spaceIds"),s(": 空间 "),n("code",null,"id"),s(" 集合【选传】")]),n("ul",null,[n("li",null,[s("只有当 "),n("code",null,"tacosPath"),s(" 是 "),n("em",null,[n("strong",null,"相对路径")]),s(" 时方可生效")])])],-1),D=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Promise<TacosSDK & S>"),s(": 具体SDK模块实例")])])],-1),S=n("li",null,[n("p",null,"示例")],-1),q=o(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Space <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> root <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> space <span class="token operator">=</span> <span class="token keyword">await</span> root<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Space<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/yingli/46&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><h3 id="addlistener" tabindex="-1"><a class="header-anchor" href="#addlistener" aria-hidden="true">#</a> addListener</h3><p>监听全局空间下发的消息推送</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">addListener</span><span class="token punctuation">(</span>
 xpath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> 
 <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> SocketResponseBody<span class="token operator">&lt;</span><span class="token keyword">keyof</span> PayloadMap<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> 
 option<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>SocketConfig<span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),P=o(`<ul><li><p>参数</p><ul><li><p><code>xpath</code>: 匹配指定xpth路径下的空间or设备的消息</p><ul><li><code>*</code> 表示监听全局消息</li></ul></li><li><p><code>callback</code>: <code>socket</code> 触发消息推送事件回调</p><ul><li><code>body</code>: 指令消息主体</li></ul></li><li><p><code>options</code>: <code>socket</code> 连接配置信息 【选传】</p></li></ul></li><li><p>返回值</p><ul><li>当前实例的移除消息监听事件回调</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> root <span class="token operator">=</span> sdk<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span><span class="token punctuation">;</span>

root<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>body<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="removelistener" tabindex="-1"><a class="header-anchor" href="#removelistener" aria-hidden="true">#</a> removeListener</h3><p>移除全局socket消息监听</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">removeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> root <span class="token operator">=</span> sdk<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span><span class="token punctuation">;</span>

root<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>body<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 移除全局socket监听</span>
root<span class="token punctuation">.</span><span class="token function">removeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function R(L,K){const a=c("RouterLink");return l(),i("div",null,[r,n("p",null,[s("根SDK模块类， "),d,s(" 继承自 "),t(a,{to:"/digital/help/declare.html#tacossdk"},{default:e(()=>[s("TacosSDK")]),_:1}),s(" (可点击查看相关属性和方法)，提供搜索相关具体SDK模块实例（包括 "),k,s(" 、 "),v,s(" 、 "),h,s(" 、 "),m,s(" 、 "),b,s(" 、 "),g,s(" 等SDK模块）以及查询所有相关指令驱动数据的能力")]),_,n("blockquote",null,[n("p",null,[s("参考："),t(a,{to:"/digital/help/declare.html#devicedriver"},{default:e(()=>[s("DeviceDriver")]),_:1})])]),f,n("blockquote",null,[n("p",null,[s("参考："),t(a,{to:"/digital/help/declare.html#tacossdk"},{default:e(()=>[s("TacosSDK")]),_:1})])]),n("ul",null,[n("li",null,[y,n("ul",null,[n("li",null,[w,n("ul",null,[n("li",null,[s("支持传绝对路径或者相对路径，路径具体规则请参见"),t(a,{to:"/digital/essentials/xpath.html"},{default:e(()=>[s("资源定位符")]),_:1})])])]),x])]),D,S]),q,n("blockquote",null,[n("p",null,[s("参考："),t(a,{to:"/digital/help/declare.html#socketresponsebody"},{default:e(()=>[s("SocketResponseBody")]),_:1}),s("; "),t(a,{to:"/digital/help/declare.html#socketconfig"},{default:e(()=>[s("SocketConfig")]),_:1}),s("; "),t(a,{to:"/digital/help/declare.html#payloadmap"},{default:e(()=>[s("PayloadMap")]),_:1})])]),P])}const I=p(u,[["render",R],["__file","root.html.vue"]]);export{I as default};
