import{_ as p,r as o,o as i,c,a as n,b as s,d as e,w as t,e as l}from"./app.f18319b0.js";const u={},r=n("h1",{id:"plugin",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plugin","aria-hidden":"true"},"#"),s(" Plugin")],-1),d=n("code",null,"Plugin",-1),k=l(`<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="use" tabindex="-1"><a class="header-anchor" href="#use" aria-hidden="true">#</a> use( )</h3><p>挂载插件</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>不允许挂载两个同名插件</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">use</span><span class="token punctuation">(</span>creator<span class="token operator">:</span> PluginCreator<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),v=n("p",null,"参数",-1),h=n("p",null,[n("code",null,"creator:"),s(" 插件创建器")],-1),m=n("li",null,[n("p",null,[s("注: 每一个插件都是一个 "),n("strong",null,"PluginCreator"),s(" ，经过 "),n("a",{href:"#use"},"use( )"),s(" 方法后，才会变成 "),n("strong",null,"插件实例")])],-1),g=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,"插件实例")])],-1),b=n("li",null,[n("p",null,"示例")],-1),_=l(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> webglPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-engine&quot;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

skyBoxPlugin <span class="token operator">=</span> meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>webglPlugin<span class="token punctuation">.</span><span class="token function">skyBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get( )</h3><p>获取已挂载的插件实例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),f=n("p",null,"参数",-1),y=n("p",null,[n("code",null,"name:"),s(" 插件名称")],-1),x=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,"插件实例")])],-1),w=n("li",null,[n("p",null,"示例")],-1),P=l(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

hoverColorPlugin <span class="token operator">=</span> meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;hover-color&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="has" tabindex="-1"><a class="header-anchor" href="#has" aria-hidden="true">#</a> has( )</h3>`,2),q=l(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">has</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li><code>name:</code> 插件名称</li></ul></li><li><p>返回值</p><ul><li><code>true / false</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&quot;hover-color&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove( )</h3><p>移除某个插件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">remove</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> PluginCreator<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),C=n("p",null,"参数",-1),B=n("p",null,[n("code",null,"name:"),s(" 插件名称 / 插件创建器")],-1),M=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,"无")])],-1),N=l(`<p>-示例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;hover-color&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear( )</h3><p>清空所有已挂载的插件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function V(T,L){const a=o("RouterLink");return i(),c("div",null,[r,n("p",null,[d,s(" 包含了对所有挂载到 "),e(a,{to:"/three/api/meta.html#plugin"},{default:t(()=>[s("Meta")]),_:1}),s(" 上插件的管理，包括：添加、获取、移除等。")]),k,n("ul",null,[n("li",null,[v,n("ul",null,[n("li",null,[h,n("ul",null,[n("li",null,[n("p",null,[s("参考: "),e(a,{to:"/three/help/declare.html#plugincreator"},{default:t(()=>[s("PluginCreator")]),_:1})])]),m])])])]),g,b]),_,n("ul",null,[n("li",null,[f,n("ul",null,[n("li",null,[y,n("ul",null,[n("li",null,[s("参考: "),e(a,{to:"/three/plugin/webgl/orbitcontrol.html"},{default:t(()=>[s("插件")]),_:1})])])])])]),x,w]),P,n("p",null,[s("判断 "),e(a,{to:"/three/api/meta.html#plugin"},{default:t(()=>[s("Meta")]),_:1}),s(" 上是否挂载了某个插件")]),q,n("ul",null,[n("li",null,[C,n("ul",null,[n("li",null,[B,n("ul",null,[n("li",null,[s("参考: "),e(a,{to:"/three/plugin/webgl/orbitcontrol.html"},{default:t(()=>[s("插件")]),_:1})])])])])]),M]),N])}const j=p(u,[["render",V],["__file","plugin.html.vue"]]);export{j as default};
