import{_ as l,r as a,o as c,c as i,a as n,b as s,d as t,w as u,e}from"./app.f18319b0.js";const r={},d={id:"tool",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#tool","aria-hidden":"true"},"#",-1),v=e(`<p>工具插件，提供了坐标转换，距离计算等方法</p><ul><li><p>插件名称</p><p><strong>tool</strong></p></li><li><p>初始参数</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> unityPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-enging&quot;</span>
<span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> toolPlugin <span class="token operator">=</span> meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>unityPlugin<span class="token punctuation">.</span><span class="token function">tool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="toscreenpoint" tabindex="-1"><a class="header-anchor" href="#toscreenpoint" aria-hidden="true">#</a> toScreenPoint( )</h3><p>三维坐标转屏幕坐标</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">toScreenPoint</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>position<span class="token operator">:</span> DTVector3<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

    y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),m=n("p",null,"参数",-1),b=n("p",null,[n("code",null,"position:"),s(" 三维坐标点")],-1),h=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"{x, y}:"),s(" 转换结果")])])],-1),_=n("li",null,[n("p",null,"示例")],-1),g=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载tool插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> screenPoint <span class="token operator">=</span> toolPlugin<span class="token punctuation">.</span><span class="token function">toScreenPoint</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;坐标转换结果: &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function f(y,x){const o=a("badge"),p=a("RouterLink");return c(),i("div",null,[n("h1",d,[k,s(" tool "),t(o,{type:"danger",text:"v4.1.4"})]),v,n("ul",null,[n("li",null,[m,n("ul",null,[n("li",null,[b,n("ul",null,[n("li",null,[s("参考: "),t(p,{to:"/three/help/declare.html#dtvector3"},{default:u(()=>[s("DTVector3")]),_:1})])])])])]),h,_]),g])}const P=l(r,[["render",f],["__file","tool.html.vue"]]);export{P as default};
