import{_ as o,r as p,o as l,c,a as n,b as s,d as e,e as t}from"./app.f18319b0.js";const i={},u=n("h1",{id:"事件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#事件","aria-hidden":"true"},"#"),s(" 事件")],-1),r=n("strong",null,"鼠标事件",-1),d=n("strong",null,"渲染事件",-1),k=n("strong",null,"组件生命周期事件",-1),v=n("strong",null,"模型事件",-1),h=n("strong",null,[s("鼠标对"),n("code",null,"Component"),s("进行操作时")],-1),m=n("strong",null,"场景渲染中",-1),b=n("strong",null,"场景渲染完成时",-1),g=n("strong",null,"组件生命周期改变时",-1),_=n("strong",null,"模型重新渲染时",-1),f={href:"/three/essentials/event.html#dtevent-%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"noopener noreferrer"},E={href:"/three/api/component.html",target:"_blank",rel:"noopener noreferrer"},q=t(`<h2 id="dtevent-对象" tabindex="-1"><a class="header-anchor" href="#dtevent-对象" aria-hidden="true">#</a> DTEvent 对象</h2><h3 id="实例化" tabindex="-1"><a class="header-anchor" href="#实例化" aria-hidden="true">#</a> 实例化</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DTEvent</span><span class="token punctuation">(</span>
  type<span class="token operator">:</span> ModelMouseEvent <span class="token operator">|</span> RenderEvent <span class="token operator">|</span> ComponentLifeCycle <span class="token operator">|</span> ModelEvent <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  options<span class="token operator">:</span> <span class="token punctuation">{</span>
    component<span class="token operator">?</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
    object<span class="token operator">?</span><span class="token operator">:</span> Object3D<span class="token punctuation">,</span>
    event<span class="token operator">?</span><span class="token operator">:</span> MouseEvent<span class="token punctuation">,</span>
    params<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y=n("p",null,"参数:",-1),B=n("code",null,"type:",-1),x={href:"/three/essentials/event.html#%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},C={href:"/three/essentials/event.html#%E6%B8%B2%E6%9F%93%E4%BA%8B%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},M={href:"/three/essentials/event.html#%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%BA%8B%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},L={href:"/three/essentials/event.html#%E6%A8%A1%E5%9E%8B%E4%BA%8B%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},A=n("p",null,[n("code",null,"options:"),s(" 配置项")],-1),j=n("code",null,"component:",-1),D={href:"/three/api/component.html",target:"_blank",rel:"noopener noreferrer"},R=t("<li><p><code>object:</code> 3D对象</p></li><li><p><code>event:</code> <code>js</code> 事件对象 <code>Event</code></p></li><li><p><code>params:</code> 额外参数</p></li>",3),w=n("li",null,[n("p",null,"返回值:"),n("ul",null,[n("li",null,[n("code",null,"DTEvent"),s(" 实例")])])],-1),T=t('<h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h3><h4 id="stopped" tabindex="-1"><a class="header-anchor" href="#stopped" aria-hidden="true">#</a> stopped</h4><div class="custom-container tip"><p class="custom-container-title">是否阻止事件进一步传播的状态</p><ul><li>类型: <code>Boolean</code></li></ul></div><h4 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h4><div class="custom-container tip"><p class="custom-container-title">事件类型</p><ul><li>类型: <code>ModelMouseEvent | RenderEvent | ModelEvent | ComponentLifeCycle | string</code></li></ul></div><h4 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> event</h4><div class="custom-container tip"><p class="custom-container-title">js 事件对象 Event</p><ul><li>类型: <code>Event</code></li></ul></div><h4 id="component" tabindex="-1"><a class="header-anchor" href="#component" aria-hidden="true">#</a> component</h4>',8),F={class:"custom-container tip"},S=n("p",{class:"custom-container-title"},"触发事件的 Component",-1),N={href:"/three/api/component.html",target:"_blank",rel:"noopener noreferrer"},V=t(`<h4 id="params" tabindex="-1"><a class="header-anchor" href="#params" aria-hidden="true">#</a> params</h4><div class="custom-container tip"><p class="custom-container-title">额外参数</p><ul><li>类型: <code>Record&lt;string, any&gt;</code></li></ul></div><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h3><h4 id="stoppropagation" tabindex="-1"><a class="header-anchor" href="#stoppropagation" aria-hidden="true">#</a> stopPropagation()</h4><p>阻止事件进一步传播</p><ul><li><p>参数:</p><ul><li>无</li></ul></li><li><p>返回值:</p><ul><li>无</li></ul></li><li><p>示例:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="鼠标事件" tabindex="-1"><a class="header-anchor" href="#鼠标事件" aria-hidden="true">#</a> 鼠标事件</h2><h4 id="modelmouseevent" tabindex="-1"><a class="header-anchor" href="#modelmouseevent" aria-hidden="true">#</a> ModelMouseEvent</h4>`,9),P=n("em",null,[n("strong",null,"单击")],-1),I=n("em",null,[n("strong",null,"双击")],-1),O=n("em",null,[n("strong",null,"划过")],-1),z=n("em",null,[n("strong",null,"失焦")],-1),G=n("em",null,[n("strong",null,"移动")],-1),H={href:"/three/essentials/event.html#dtevent-%E5%AF%B9%E8%B1%A1",target:"_blank",rel:"noopener noreferrer"},J={href:"/three/api/component.html",target:"_blank",rel:"noopener noreferrer"},K=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> ModelMouseEvent <span class="token punctuation">{</span>
  dblclick <span class="token operator">=</span> <span class="token string">&quot;dblclick&quot;</span><span class="token punctuation">,</span>
  click <span class="token operator">=</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span>
  hover <span class="token operator">=</span> <span class="token string">&quot;hover&quot;</span><span class="token punctuation">,</span>
  blur <span class="token operator">=</span> <span class="token string">&quot;blur&quot;</span><span class="token punctuation">,</span>
  mousemove <span class="token operator">=</span> <span class="token string">&quot;mousemove&quot;</span><span class="token punctuation">,</span>
  contextmenu <span class="token operator">=</span> <span class="token string">&quot;contextmenu&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>dbclick:</code> 鼠标双击</p></li><li><p><code>click:</code> 鼠标单击</p></li><li><p><code>hover:</code> 鼠标划过</p></li><li><p><code>blur:</code> 鼠标失去焦点</p></li><li><p><code>mousemove:</code> 鼠标移动</p></li><li><p><code>contextmenu:</code> 鼠标右键</p></li><li><p>示例:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>meta<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;dblclick&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> DTEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;双击的组件&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;js事件对象Event&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>mouseEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 阻止事件进一步传播</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="渲染事件" tabindex="-1"><a class="header-anchor" href="#渲染事件" aria-hidden="true">#</a> 渲染事件</h2><h4 id="renderevent" tabindex="-1"><a class="header-anchor" href="#renderevent" aria-hidden="true">#</a> RenderEvent</h4><p>渲染事件发生在 <strong>场景渲染中</strong> 和 <strong>场景渲染完成时</strong> 。通过监听渲染事件，可以获取到当前场景的渲染进度，包括<strong>文件总大小</strong>、<strong>已加载的文件大小</strong>、<strong>加载百分比</strong>。对应的事件名为：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> RenderEvent <span class="token punctuation">{</span>
  loading <span class="token operator">=</span> <span class="token string">&quot;loading&quot;</span><span class="token punctuation">,</span>
  loaded <span class="token operator">=</span> <span class="token string">&quot;loaded&quot;</span><span class="token punctuation">,</span>
  beforeLeave <span class="token operator">=</span> <span class="token string">&quot;beforeLeave&quot;</span><span class="token punctuation">,</span>
  beforeEnter <span class="token operator">=</span> <span class="token string">&quot;beforeEnter&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>loading:</code> 加载中</p></li><li><p><code>loaded:</code> 加载完成</p></li><li><p><code>beforeLeave:</code> 离开一个场景前</p></li><li><p><code>beforeEnter:</code> 进入一个场景前</p></li><li><p>示例:</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>meta<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>RenderEvent<span class="token punctuation">.</span>loaded<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token punctuation">,</span> total<span class="token punctuation">,</span> current<span class="token punctuation">,</span> percent <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;文件总大小&quot;</span><span class="token punctuation">,</span> total<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;已加载的文件大小&quot;</span><span class="token punctuation">,</span> current<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;加载百分比&quot;</span><span class="token punctuation">,</span> percent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件生命周期事件" tabindex="-1"><a class="header-anchor" href="#组件生命周期事件" aria-hidden="true">#</a> 组件生命周期事件</h2><h4 id="componentlifecycle" tabindex="-1"><a class="header-anchor" href="#componentlifecycle" aria-hidden="true">#</a> ComponentLifeCycle</h4><p>组件生命周期事件发生在组件生命周期状态改变时，通过监听该事件，可以准确掌握一个组件的当前状态。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> ComponentLifeCycle <span class="token punctuation">{</span>
  created <span class="token operator">=</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span>
  mounted <span class="token operator">=</span> <span class="token string">&quot;mounted&quot;</span><span class="token punctuation">,</span>
  render <span class="token operator">=</span> <span class="token string">&quot;render&quot;</span><span class="token punctuation">,</span>
  unmounted <span class="token operator">=</span> <span class="token string">&quot;unmounted&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>created:</code> 创建之后</p></li><li><p><code>mounted:</code> 挂载之前</p></li><li><p><code>render:</code> 渲染</p></li><li><p><code>unmoented:</code>卸载之后</p></li></ul><h2 id="模型事件" tabindex="-1"><a class="header-anchor" href="#模型事件" aria-hidden="true">#</a> 模型事件</h2><h4 id="modelevent" tabindex="-1"><a class="header-anchor" href="#modelevent" aria-hidden="true">#</a> ModelEvent</h4><p>渲染事件发生在执行如 <em><strong>隐藏模型</strong></em>、<em><strong>给模型加勾边</strong></em> 等一系列操作后，会重新渲染模型，通过监听渲染事件，可以获取到执行这些操作的模型。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> ModelEvent <span class="token punctuation">{</span>
  selected <span class="token operator">=</span> <span class="token string">&quot;selected&quot;</span><span class="token punctuation">,</span>
  unselected <span class="token operator">=</span> <span class="token string">&quot;unselected&quot;</span><span class="token punctuation">,</span>
  multipleSelected <span class="token operator">=</span> <span class="token string">&quot;multipleSelected&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>selected:</code> 模型选中</p></li><li><p><code>multipleSelected:</code> 模型多选</p></li><li><p>示例：</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>meta<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;multipleSelected&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;选中的模型对象数组&quot;</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

meta<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;selected&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;选中的component&quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function Q(U,W){const a=p("ExternalLinkIcon");return l(),c("div",null,[u,n("p",null,[s("事件是指用户在某事务上由于某种行为所执行的操作，我们定义了 "),r,s("、"),d,s("、"),k,s("、"),v,s(" 四种事件类型，分别发生在 "),h,s("，"),m,s("， "),b,s("，"),g,s(" 和 "),_,s("。 定义了 "),n("a",f,[s("DTEvent"),e(a)]),s("事件对象，该事件对象记录了触发事件的 "),n("a",E,[s("Component"),e(a)]),s("、js事件对象Event、以及是否阻止事件进一步传播的状态。")]),q,n("ul",null,[n("li",null,[y,n("ul",null,[n("li",null,[n("p",null,[B,s(),n("a",x,[s("ModelMouseEvent"),e(a)]),s(" | "),n("a",C,[s("RenderEvent"),e(a)]),s(" | "),n("a",M,[s("ComponentLifeCycle"),e(a)]),s(" | "),n("a",L,[s("ModelEvent"),e(a)])])]),n("li",null,[A,n("ul",null,[n("li",null,[n("p",null,[j,s(),n("a",D,[s("Component"),e(a)])])]),R])])])]),w]),T,n("div",F,[S,n("ul",null,[n("li",null,[s("类型: "),n("a",N,[s("Component"),e(a)])])])]),V,n("p",null,[s("鼠标事件发生模型渲染成功后，在组件上对鼠标进行 "),P,s("、"),I,s("、"),O,s("、"),z,s("、"),G,s(" 操作时。通过监听鼠标事件，可以获取到当前操作的 "),n("a",H,[s("DTEvent"),e(a)]),s(" 对象或 "),n("a",J,[s("Component"),e(a)]),s(" 对象。对应的事件名为：")]),K])}const Y=o(i,[["render",Q],["__file","event.html.vue"]]);export{Y as default};
