import{_ as o,r as c,o as p,c as i,a,b as n,d as t,w as e,e as l}from"./app.f18319b0.js";const r={},u=l(`<h1 id="根据设备驱动id查询设备实例" tabindex="-1"><a class="header-anchor" href="#根据设备驱动id查询设备实例" aria-hidden="true">#</a> 根据设备驱动id查询设备实例</h1><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span> Root <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Device <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 连接参数</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>core<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取root实例</span>
    <span class="token keyword">const</span> root <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">creatInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span>
    <span class="token comment">// 根据设备驱动id查询设备实例</span>
    <span class="token keyword">const</span> device <span class="token operator">=</span> <span class="token keyword">await</span> root<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Device<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/Office/xxx/xxx/devices/*[@driver=&#39;driverId&#39;]&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function d(k,v){const s=c("RouterLink");return p(),i("div",null,[u,a("blockquote",null,[a("p",null,[n("参考: "),t(s,{to:"/digital/help/declare.html#core"},{default:e(()=>[n("Core")]),_:1}),n("; "),t(s,{to:"/digital/api/root.html#search"},{default:e(()=>[n("Root.search()")]),_:1}),n(";")])])])}const f=o(r,[["render",d],["__file","searchDevice.html.vue"]]);export{f as default};
