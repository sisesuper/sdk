import{_ as l,r as p,o,c as i,a as n,b as s,d as t,e as a}from"./app.f18319b0.js";const c={},u=a(`<h1 id="layer-图层" tabindex="-1"><a class="header-anchor" href="#layer-图层" aria-hidden="true">#</a> Layer 图层</h1><p>创建组件实例时 <code>new</code></p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> instance <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token string">&quot;radar1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> layer <span class="token operator">=</span> instance<span class="token punctuation">.</span>layer<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add" aria-hidden="true">#</a> add()</h3><p>添加图层</p>`,7),r=n("p",null,"参数",-1),d=n("li",null,[n("p",null,[n("code",null,"list"),s(": "),n("code",null,"LayerOptions | LayerOptions[]")])],-1),k={href:"/miniapp/help/type.html#layeroptions",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,[n("p",null,"示例")],-1),m=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token punctuation">{</span>
    uid<span class="token operator">:</span> <span class="token string">&quot;uid&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 图层唯一ID（自动生成）</span>
    key<span class="token operator">:</span> <span class="token string">&quot;layer1&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 图层的标识</span>
    name<span class="token operator">:</span> <span class="token string">&quot;图层1&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 图层名称</span>
    defaultRender<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// 是否默认渲染</span>
    props<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    component<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
layer<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getlayer" tabindex="-1"><a class="header-anchor" href="#getlayer" aria-hidden="true">#</a> getLayer()</h3><p>获取指定的图层</p><ul><li><p>参数</p><ul><li><code>key</code>: <code>string</code></li></ul></li><li><p>返回值</p><ul><li><code>Component | undefined</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> component <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">getLayer</span><span class="token punctuation">(</span><span class="token string">&quot;layer1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get()</h3><p>获取图层的内部节点</p>`,7),v=n("li",null,[n("p",null,"参数"),n("ul",null,[n("li",null,[n("code",null,"key"),s(": "),n("code",null,"string")])])],-1),g=n("p",null,"返回值",-1),y={href:"/miniapp/help/type.html#layeritem",target:"_blank",rel:"noopener noreferrer"},_=n("li",null,[n("p",null,"示例")],-1),b=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> option <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;layer1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="all" tabindex="-1"><a class="header-anchor" href="#all" aria-hidden="true">#</a> all()</h3><p>获取所有的图层</p>`,3),f=n("p",null,"返回值",-1),x={href:"/miniapp/help/type.html#layeritem",target:"_blank",rel:"noopener noreferrer"},q=n("li",null,[n("p",null,"示例")],-1),L=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> layers <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> update()</h3><p>更新图层信息</p><ul><li><p>参数</p><ul><li><p><code>key</code>: <code>string</code></p></li><li><p><code>params</code>: <code>Record&lt;string, any&gt;</code></p></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layer<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&quot;layer1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;图层1重命名&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reset" tabindex="-1"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> reset()</h3><p>重置图层</p>`,7),w=n("p",null,"参数",-1),C=n("li",null,[n("p",null,[n("code",null,"layer?"),s(": "),n("code",null,"LayerOptions | LayerOptions[]")])],-1),O={href:"/miniapp/help/type.html#layeroptions",target:"_blank",rel:"noopener noreferrer"},R=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Promise<boolean>")])])],-1),I=n("li",null,[n("p",null,"示例")],-1),N=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> option <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;layer1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 如果指定了重置的图层数据，则删除历史的图层</span>
layer<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;重置成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create" aria-hidden="true">#</a> create()</h3><p>创建新的图层</p>`,3),P=a("<li><p>参数</p><ul><li><p><code>key</code>: <code>string</code></p></li><li><blockquote><p><code>options</code>: <code>{</code></p><blockquote><p><code>name</code>:<code> string;</code></p><p><code>defaultRender?</code>:<code> boolean;</code></p><p><code>props?</code>:<code> Record&lt;string, any&gt;</code></p></blockquote><p><code>} = { name: &quot;&quot; }</code></p></blockquote></li></ul></li>",1),V=n("p",null,"返回值",-1),B=n("li",null,[n("p",null,[n("code",null,"Promise<Component | undefined>")])],-1),E={href:"/miniapp/api/component.html",target:"_blank",rel:"noopener noreferrer"},D=n("li",null,[n("p",null,"示例")],-1),S=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> newLayer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
layer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;layer2&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;图层2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  newLayer <span class="token operator">=</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove()</h3><p>删除图层（会直接删除当前图层的所有数据）</p><ul><li><p>参数</p><ul><li><code>key?</code>: <code>string | string[]</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layer<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;layer1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="toggle" tabindex="-1"><a class="header-anchor" href="#toggle" aria-hidden="true">#</a> toggle()</h3><p>图层切换</p><ul><li><p>参数</p><ul><li><code>key</code>: <code>string | string[]</code></li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;boolean&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layer<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">&quot;layer1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="hide" tabindex="-1"><a class="header-anchor" href="#hide" aria-hidden="true">#</a> hide()</h3><p>隐藏指定的图层</p><ul><li><p>参数</p><ul><li><p><code>key?</code>: <code>string | string[]</code></p><ul><li>若 <code>key</code> 为空，则隐藏全部图层</li></ul></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layer<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token string">&quot;layer1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 隐藏layer1</span>
layer<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 隐藏全部图层</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render()</h3><p>渲染指定的图层</p>`,15),T=n("li",null,[n("p",null,"参数"),n("ul",null,[n("li",null,[n("p",null,[n("code",null,"key?"),s(": "),n("code",null,"string | string[]")]),n("ul",null,[n("li",null,[s("若 "),n("code",null,"key"),s(" 为空，则渲染全部图层")])])])])],-1),j=n("p",null,"返回值",-1),z=n("li",null,[n("p",null,[n("code",null,"Promise<Component[]>")])],-1),A={href:"/miniapp/api/component.html",target:"_blank",rel:"noopener noreferrer"},F=n("li",null,[n("p",null,"示例")],-1),G=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> component <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
layer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;layer1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  component <span class="token operator">=</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getrenderedlayer" tabindex="-1"><a class="header-anchor" href="#getrenderedlayer" aria-hidden="true">#</a> getRenderedLayer()</h3><p>获取当前渲染的图层</p>`,3),H=n("p",null,"返回值",-1),J=n("li",null,[n("p",null,[n("code",null,"Component[]")])],-1),K={href:"/miniapp/api/component.html",target:"_blank",rel:"noopener noreferrer"},M=n("li",null,[n("p",null,"示例")],-1),Q=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> component <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">getRenderedLayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="exports" tabindex="-1"><a class="header-anchor" href="#exports" aria-hidden="true">#</a> exports()</h3><p>导出当前的图层</p>`,3),U=n("p",null,"返回值",-1),W=n("li",null,[n("p",null,[n("code",null,"LayerOptions[]")])],-1),X={href:"/miniapp/help/type.html#layeroptions",target:"_blank",rel:"noopener noreferrer"},Y=n("li",null,[n("p",null,"示例")],-1),Z=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> layerOptions <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">exports</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1);function $(nn,sn){const e=p("ExternalLinkIcon");return o(),i("div",null,[u,n("ul",null,[n("li",null,[r,n("ul",null,[d,n("li",null,[n("p",null,[s("参考："),n("a",k,[s("LayerOptions"),t(e)])])])])]),h]),m,n("ul",null,[v,n("li",null,[g,n("ul",null,[n("li",null,[n("a",y,[s("LayerItem"),t(e)])])])]),_]),b,n("ul",null,[n("li",null,[f,n("ul",null,[n("li",null,[n("a",x,[s("LayerItem"),t(e)])])])]),q]),L,n("ul",null,[n("li",null,[w,n("ul",null,[C,n("li",null,[n("p",null,[s("参考："),n("a",O,[s("LayerOptions"),t(e)])])])])]),R,I]),N,n("ul",null,[P,n("li",null,[V,n("ul",null,[B,n("li",null,[n("p",null,[s("参考："),n("a",E,[s("Component"),t(e)])])])])]),D]),S,n("ul",null,[T,n("li",null,[j,n("ul",null,[z,n("li",null,[n("p",null,[s("参考："),n("a",A,[s("Component"),t(e)])])])])]),F]),G,n("ul",null,[n("li",null,[H,n("ul",null,[J,n("li",null,[n("p",null,[s("参考："),n("a",K,[s("Component"),t(e)])])])])]),M]),Q,n("ul",null,[n("li",null,[U,n("ul",null,[W,n("li",null,[n("p",null,[s("参考："),n("a",X,[s("LayerOptions"),t(e)])])])])]),Y]),Z])}const en=l(c,[["render",$],["__file","layer.html.vue"]]);export{en as default};
