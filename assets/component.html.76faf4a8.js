import{_ as a,r,o as c,c as s,a as e,b as n,d as o}from"./app.f18319b0.js";const d={},l=e("h1",{id:"组件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#组件","aria-hidden":"true"},"#"),n(" 组件")],-1),h={href:"/three/api/meta.html",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"createComponent",-1),i=e("h3",{id:"模型加载格式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#模型加载格式","aria-hidden":"true"},"#"),n(" 模型加载格式")],-1),u=e("p",null,[n("目前仅支持"),e("em",null,[e("strong",null,"GLTF")]),n("模型格式，后续会进行扩展。")],-1),m=e("h3",{id:"组件查询",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#组件查询","aria-hidden":"true"},"#"),n(" 组件查询")],-1),p=e("code",null,"meta",-1),f=e("code",null,"component",-1),x=e("code",null,"get",-1),b={href:"/three/api/component.html",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"get",-1),g=e("h3",{id:"组件动画",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#组件动画","aria-hidden":"true"},"#"),n(" 组件动画")],-1),v={href:"/three/advanced/animation.html",target:"_blank",rel:"noopener noreferrer"},B=e("h3",{id:"自定义组件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#自定义组件","aria-hidden":"true"},"#"),n(" 自定义组件")],-1),E=e("p",null,"完善中...",-1);function L(N,V){const t=r("ExternalLinkIcon");return c(),s("div",null,[l,e("p",null,[n("组件对象主要用于场景中模型的管理，包括模型的加载，模型属性的设置，模型层级关系的控制等。通常我们并不需要直接实例化组件，而是通过"),e("a",h,[n("meta"),o(t)]),n("模块暴露的"),_,n("方法创建组件。")]),i,u,m,e("p",null,[n("在"),p,n("对象中有当前场景所有组件列表属性"),f,n("以及相应"),x,n("方法查询组件，另外"),e("a",b,[n("component"),o(t)]),n("对象包含"),k,n("方法查询自身子组件。")]),g,e("blockquote",null,[e("p",null,[n("参考: "),e("a",v,[n("动画"),o(t)])])]),B,E])}const I=a(d,[["render",L],["__file","component.html.vue"]]);export{I as default};
