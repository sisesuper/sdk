import{_ as o,r as p,o as c,c as l,a as e,b as n,d as a,w as t,e as i}from"./app.f18319b0.js";const u={},r=i(`<h1 id="监听全局空间设备属性变化的推送数据" tabindex="-1"><a class="header-anchor" href="#监听全局空间设备属性变化的推送数据" aria-hidden="true">#</a> 监听全局空间设备属性变化的推送数据</h1><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span> Root<span class="token punctuation">,</span> SocketResponseType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 连接参数</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>core<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取root实例</span>
    <span class="token keyword">const</span> root <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">creatInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span>
    <span class="token comment">// 监听全局空间设备属性变化</span>
    root<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>SocketResponseType<span class="token punctuation">.</span>deviceProperty<span class="token punctuation">,</span> <span class="token punctuation">(</span>body<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function d(k,m){const s=p("RouterLink");return c(),l("div",null,[r,e("blockquote",null,[e("p",null,[n("参考: "),a(s,{to:"/digital/help/declare.html#core"},{default:t(()=>[n("Core")]),_:1}),n("; "),a(s,{to:"/digital/api/root.html#addlistener"},{default:t(()=>[n("Root.addListener()")]),_:1}),n("; "),a(s,{to:"/digital/help/declare.html#socketresponsetype"},{default:t(()=>[n("SocketResponseType")]),_:1})])])])}const b=o(u,[["render",d],["__file","addListener.html.vue"]]);export{b as default};
