import{_ as c,r as p,o as i,c as l,a,b as n,d as e,w as t,e as o}from"./app.f18319b0.js";const r={},u=o(`<h1 id="全局" tabindex="-1"><a class="header-anchor" href="#全局" aria-hidden="true">#</a> 全局</h1><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="connect" tabindex="-1"><a class="header-anchor" href="#connect" aria-hidden="true">#</a> connect()</h3><p>初始化Tacos连接</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">connect</span><span class="token punctuation">(</span>options<span class="token operator">:</span> ConnectOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Core<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),d=o(`<ul><li><p>参数</p><ul><li><code>options</code>: 连接配置选项</li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;Core&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    appCode<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    request<span class="token operator">:</span> <span class="token punctuation">{</span>
      baseURL<span class="token operator">:</span> <span class="token string">&quot;xxx&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    socket<span class="token operator">:</span> <span class="token punctuation">{</span>
      url<span class="token operator">:</span> <span class="token string">&#39;xxxx&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>core<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function k(v,m){const s=p("RouterLink");return i(),l("div",null,[u,a("blockquote",null,[a("p",null,[n("参考："),e(s,{to:"/digital/help/declare.html#connectoptions"},{default:t(()=>[n("ConnectOptions")]),_:1}),n("; "),e(s,{to:"/digital/help/declare.html#core"},{default:t(()=>[n("Core")]),_:1})])]),d])}const b=c(r,[["render",k],["__file","global.html.vue"]]);export{b as default};
