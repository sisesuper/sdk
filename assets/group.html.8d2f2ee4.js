import{_ as n,o as s,c as a,e as p}from"./app.f18319b0.js";const t={},o=p(`<h1 id="group-组" tabindex="-1"><a class="header-anchor" href="#group-组" aria-hidden="true">#</a> Group 组</h1><h2 id="creategroup" tabindex="-1"><a class="header-anchor" href="#creategroup" aria-hidden="true">#</a> createGroup</h2><p>创建group</p><ul><li><p>参数</p></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>focusList<span class="token operator">?.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createGroup</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>focusList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 先把当前聚焦的组件失焦</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 再把打组之后的组聚焦</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateOutline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="disbandgroup" tabindex="-1"><a class="header-anchor" href="#disbandgroup" aria-hidden="true">#</a> disbandGroup</h2><p>解散组</p><ul><li><p>参数</p></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> _compList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">.</span>focusList<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>_compList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> disbandGroupActions<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * <span class="token keyword">@type</span> <span class="token punctuation">{</span> string[] <span class="token punctuation">}</span>
   */</span>
  <span class="token keyword">const</span> uidList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> needFocusComp<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  _compList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>comp<span class="token operator">:</span> Component<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isGroup</span><span class="token punctuation">(</span>comp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span>comp<span class="token punctuation">)</span><span class="token punctuation">;</span>
      needFocusComp <span class="token operator">=</span> needFocusComp<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>comp<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
      uidList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>comp<span class="token punctuation">.</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
      disbandGroupActions<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">disbandGroup</span><span class="token punctuation">(</span>comp<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),c=[o];function e(u,i){return s(),a("div",null,c)}const k=n(t,[["render",e],["__file","group.html.vue"]]);export{k as default};
