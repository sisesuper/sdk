import{_ as t,r as o,o as p,c,a as s,b as n,d as i,e as a}from"./app.f18319b0.js";const r="/sdk/static/guide.hook.png",l={},d=a('<h1 id="模型基础" tabindex="-1"><a class="header-anchor" href="#模型基础" aria-hidden="true">#</a> 模型基础</h1><h2 id="什么是三维模型" tabindex="-1"><a class="header-anchor" href="#什么是三维模型" aria-hidden="true">#</a> 什么是三维模型</h2><p>三维模型是物体的多边形表示，通常用计算机或者其它视频设备进行显示。 显示的物体可以是现实世界的实体，也可以是虚构的物体。 任何物理自然界存在的东西都可以用三维模型表示。</p><p>在DT-SDK中三维模型为最小的可操作单元，组件扩展、事件系统的对象也是三维模型， 下列将展示如何对模型进行扩展、如何操作模型，以及模型实例化过程中的生命周期。</p><h2 id="简单操作" tabindex="-1"><a class="header-anchor" href="#简单操作" aria-hidden="true">#</a> 简单操作</h2>',5),u=s("code",null,"this.$options",-1),k={href:"/config/",target:"_blank",rel:"noopener noreferrer"},h=s("code",null,"this.$model",-1),m=a(`<p>例如把模型位置往Y轴上移10个单元距离：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>createComponent<span class="token punctuation">,</span> DTModule<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;dt-sdk-js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> DTModule<span class="token punctuation">.</span>Type<span class="token punctuation">.</span>FbxLoader<span class="token punctuation">,</span>
    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>transformMatrix <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>   
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模型生命周期" tabindex="-1"><a class="header-anchor" href="#模型生命周期" aria-hidden="true">#</a> 模型生命周期</h2><p>渲染三维场景的过程中，会逐一对三维模型进行实例化操作，每个模型实例化过程中会涉及多个阶段，例如：实例化前的数据组装、 模型创建前、模型创建后等等多个阶段。下列将用一张图片完整的展示，模型每个阶段的生命周期函数以及他们的先后顺序。</p><img src="`+r+'"><p>在整个三维场景渲染过程中，分为初始化上下文=&gt;初始化模型=&gt;初始化相机=&gt;初始化控制器=&gt;初始化渲染器几个环节。</p>',6);function v(_,b){const e=o("ExternalLinkIcon");return p(),c("div",null,[d,s("p",null,[n("在DT-SDK中通过该修改模型的参数值"),u,n("（"),s("a",k,[n("点击查看更多"),i(e)]),n("），进行对模型的控制， 在非必要情况下请勿直接通过"),h,n("操作底层模型对象（this.$model即为three.js中的各实例对象）。")]),m])}const g=t(l,[["render",v],["__file","model.html.vue"]]);export{g as default};
