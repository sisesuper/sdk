import{_ as l,r as e,o as r,c,a as n,b as s,d as a,e as o}from"./app.f18319b0.js";const p={},d={id:"orbitcontrol",tabindex:"-1"},u=n("a",{class:"header-anchor",href:"#orbitcontrol","aria-hidden":"true"},"#",-1),h=o(`<p>轨道控制器，可以使得相机围绕目标进行轨道运动</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>该插件为默认插件，在 <code>meta</code> 实例化后会自动挂载</p></div><ul><li><p>插件名称</p><p><strong>orbit-control</strong></p></li><li><p>初始参数</p><ul><li><p><code>props: OribitControlProps = {}</code> 自定义参数</p><ul><li>注: 初始参数可以为空</li></ul></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> webglPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-enging&quot;</span>
<span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> orbitControlPlugin <span class="token operator">=</span> meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>webglPlugin<span class="token punctuation">.</span><span class="token function">orbitControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="control" tabindex="-1"><a class="header-anchor" href="#control" aria-hidden="true">#</a> control</h3>`,6),k={class:"custom-container tip"},m=n("p",{class:"custom-container-title"},"轨道控制器对象",-1),b={href:"https://threejs.org/docs/index.html?q=orbit#examples/zh/controls/OrbitControls",target:"_blank",rel:"noopener noreferrer"},g={id:"enabled",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#enabled","aria-hidden":"true"},"#",-1),_=o(`<div class="custom-container tip"><p class="custom-container-title">启用或者禁用轨道控制器</p></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="mode" tabindex="-1"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> mode( )</h3><p>更改轨道控制器的模式</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> mode<span class="token operator">:</span> <span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token string">&quot;2d&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;3d&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li><p><code>type:</code> 模式类型，可选 <strong>2d</strong> / <strong>3d</strong></p><ul><li>注: 默认是 <strong>3d</strong> ，当选择 <strong>2d</strong> 时，视角将固定为 <strong>俯视</strong></li></ul></li></ul></li><li><p>返回值</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载orbitControl插件的步骤<span class="token operator">...</span>

orbitControlPlugin<span class="token punctuation">.</span><span class="token function">mode</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function f(x,y){const t=e("badge"),i=e("ExternalLinkIcon");return r(),c("div",null,[n("h1",d,[u,s(" orbitControl "),a(t,{text:"默认插件"})]),h,n("div",k,[m,n("ul",null,[n("li",null,[s("参考: "),n("a",b,[s("orbitControls"),a(i)])])])]),n("h3",g,[v,s(" enabled "),a(t,{type:"danger",text:"v4.1.4"})]),_])}const C=l(p,[["render",f],["__file","orbitcontrol.html.vue"]]);export{C as default};
