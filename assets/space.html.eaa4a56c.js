import{_ as l,r as e,o as c,c as i,a as n,b as s,d as t,e as a}from"./app.f18319b0.js";const r={},u={id:"space",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#space","aria-hidden":"true"},"#",-1),k=a(`<ul><li><p>插件名称</p><p><strong>space</strong></p></li><li><p>初始参数</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> webglPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-enging&quot;</span>
<span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> spacePlugin <span class="token operator">=</span> meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>webglPlugin<span class="token punctuation">.</span><span class="token function">space</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render( )</h3><p>渲染制定的模型至当前空间</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>target<span class="token operator">:</span> Component<span class="token operator">&lt;</span>WebglModel<span class="token operator">&gt;</span><span class="token punctuation">,</span>options<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>url<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> replace<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Component<span class="token operator">&lt;</span>WebglModel<span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),m=a("<li><p>参数</p><ul><li><p><code>target:</code> 当前空间模型</p></li><li><p><code>options:</code></p><ul><li><p><code>url:</code> 定制空间模型，需在同一目录下有对应的配置文件</p></li><li><p><code>replace:</code> 覆盖</p></li></ul></li></ul></li>",1),v=n("p",null,"返回值",-1),g=n("p",null,[n("code",null,"Promise<Component<WebglModel>>:")],-1),h={href:"/three/api/component.html",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,[n("p",null,"示例")],-1),_=a(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

 <span class="token keyword">let</span> room <span class="token operator">=</span> meta<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;模型Id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//url指向空间模型，且有在同一目录下有对应的配置文件</span>
    spacePlugin<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>room<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      url<span class="token operator">:</span> <span class="token string">&quot;空间模型路径&quot;</span><span class="token punctuation">,</span>
      replace<span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function f(x,y){const o=e("badge"),p=e("ExternalLinkIcon");return c(),i("div",null,[n("h1",u,[d,s(" space "),t(o,{type:"danger",text:"v4.1.6"})]),k,n("ul",null,[m,n("li",null,[v,n("ul",null,[n("li",null,[g,n("ul",null,[n("li",null,[s("参考: "),n("a",h,[s("Component"),t(p)])])])])])]),b]),_])}const q=l(r,[["render",f],["__file","space.html.vue"]]);export{q as default};
