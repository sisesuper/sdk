import{_ as c,r as o,o as u,c as r,a as n,b as s,d as a,w as p,e as t}from"./app.f18319b0.js";const d={},k={id:"poi2d",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#poi2d","aria-hidden":"true"},"#",-1),m=t(`<p>该插件用于给 <strong>模型 / 坐标</strong> 添加 <strong>文字 / 图片 / html元素</strong> 标签，该插件与 poi 插件使用完全一致</p><ul><li><p>插件名称</p><p><strong>poi2d</strong></p></li><li><p>初始参数</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> webglPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-enging&quot;</span>
<span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> poiPlugin <span class="token operator">=</span> meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>webglPlugin<span class="token punctuation">.</span><span class="token function">poi2d</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="css3drender" tabindex="-1"><a class="header-anchor" href="#css3drender" aria-hidden="true">#</a> css3DRender</h3>`,5),h={class:"custom-container tip"},g=n("p",{class:"custom-container-title"},"渲染器",-1),b={href:"https://threejs.org/docs/index.html?q=css3d#examples/zh/renderers/CSS3DRenderer",target:"_blank",rel:"noopener noreferrer"},y=t(`<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="createtext" tabindex="-1"><a class="header-anchor" href="#createtext" aria-hidden="true">#</a> createText( )</h3><p>创建文字标签</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">createText</span><span class="token operator">:</span> <span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>TextPoiOptions<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> PoiInstance
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),_=n("p",null,"参数",-1),f=n("p",null,[n("code",null,"options:"),s(" 文字标签配置参数")],-1),x=t('<li><p>返回值</p><ul><li><p><code>PoiInstance:</code> 标签实例</p><ul><li><p>注: 标签实例具有3个方法，用于将该标签应用到场景中</p></li><li><p>参考: <a href="#applytocomponent">applyToComponent( )</a>; <a href="#applytotype">applyToType( )</a>; <a href="#applytoposition">applyToPosition( )</a></p></li></ul></li></ul></li><li><p>示例</p></li>',2),T=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> poiText <span class="token operator">=</span> poiPlugin<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    text<span class="token operator">:</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
    className<span class="token operator">:</span> <span class="token string">&quot;testPoi&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createimage" tabindex="-1"><a class="header-anchor" href="#createimage" aria-hidden="true">#</a> createImage( )</h3><p>创建图片标签</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">createImage</span><span class="token operator">:</span> <span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>ImagePoiOptions<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> PoiInstance
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),q=n("p",null,"参数",-1),P=n("p",null,[n("code",null,"options:"),s(" 图片标签配置参数")],-1),w=t('<li><p>返回值</p><ul><li><p><code>PoiInstance:</code> 标签实例</p><ul><li><p>注: 标签实例具有3个方法，用于将该标签应用到场景中</p></li><li><p>参考: <a href="#applytocomponent">applyToComponent( )</a>; <a href="#applytotype">applyToType( )</a>; <a href="#applytoposition">applyToPosition( )</a></p></li></ul></li></ul></li><li><p>示例</p></li>',2),C=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> poiImage <span class="token operator">=</span> poiPlugin<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&quot;https://xxx.xxx&quot;</span><span class="token punctuation">,</span>
    className<span class="token operator">:</span> <span class="token string">&quot;testPoi&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createhtml" tabindex="-1"><a class="header-anchor" href="#createhtml" aria-hidden="true">#</a> createHtml( )</h3><p>创建 <code>Html</code> 标签</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">createHtml</span><span class="token operator">:</span> <span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>HtmlPoiOptions<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> PoiInstance
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),S=n("p",null,"参数",-1),D=n("p",null,[n("code",null,"options:"),s(),n("code",null,"Html"),s(" 标签配置参数")],-1),O=t('<li><p>返回值</p><ul><li><p><code>PoiInstance:</code> 标签实例</p><ul><li><p>注: 标签实例具有2个方法，用于将该标签应用到场景中</p></li><li><p>参考: <a href="#applytocomponent">applyToComponent( )</a>; <a href="#applytoposition">applyToPosition( )</a></p></li></ul></li></ul></li><li><p>示例</p></li>',2),M=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
div<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">&quot;testDiv&quot;</span><span class="token punctuation">;</span>
div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">&quot;5px&quot;</span><span class="token punctuation">;</span>
div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">&quot;5px&quot;</span><span class="token punctuation">;</span>
div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#three-container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> poiHtml <span class="token operator">=</span> poiPlugin<span class="token punctuation">.</span><span class="token function">createHtml</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    el<span class="token operator">:</span> <span class="token string">&quot;testDiv&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="applytocomponent" tabindex="-1"><a class="header-anchor" href="#applytocomponent" aria-hidden="true">#</a> applyToComponent( )</h4><p>将标签应用于组件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">applyToComponent</span><span class="token punctuation">(</span>
    component<span class="token operator">:</span> Component<span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">&gt;</span> <span class="token operator">|</span> Component<span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    interceptor<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>component<span class="token operator">:</span> Component<span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> options<span class="token operator">:</span> <span class="token constant">O</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token constant">O</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>CSS3DObject<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),I=n("p",null,"参数",-1),A=n("p",null,[n("code",null,"component:"),s(" 目标组件")],-1),E=n("code",null,"interceptor:",-1),j=n("strong",null,"组件",-1),V=n("strong",null,"配置参数",-1),H=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Array<CSS3DObject>")])])],-1),L=n("li",null,[n("p",null,"示例")],-1),N=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> poiText <span class="token operator">=</span> poiPlugin<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    text<span class="token operator">:</span> <span class="token string">&quot;testPoi&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> component <span class="token operator">=</span> meta<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ModelId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
poiText<span class="token punctuation">.</span><span class="token function">applyToComponent</span><span class="token punctuation">(</span>component<span class="token punctuation">,</span> <span class="token punctuation">(</span>component<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>positions<span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> options
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="applytotype" tabindex="-1"><a class="header-anchor" href="#applytotype" aria-hidden="true">#</a> applyToType( )</h4><p>将标签应用于某一类组件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">applyToType</span><span class="token punctuation">(</span>
    type<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    interceptor<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>component<span class="token operator">:</span> Component<span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> options<span class="token operator">:</span> <span class="token constant">O</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token constant">O</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>CSS3DObject<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),R=n("p",null,"参数",-1),W=n("p",null,[n("code",null,"type:"),s(" 目标组件真实类型")],-1),B=n("li",null,[n("p",null,[n("code",null,"interceptor:"),s(" 拦截器回调函数，可以获取到 "),n("strong",null,"组件"),s(" 和 "),n("strong",null,"配置参数"),s(" ，继而修改配置参数（包括标签的坐标等）")])],-1),z=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Array<CSS3DObject>")])])],-1),G=n("li",null,[n("p",null,"示例")],-1),F=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> poiText <span class="token operator">=</span> poiPlugin<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    text<span class="token operator">:</span> <span class="token string">&quot;testPoi&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
poiText<span class="token punctuation">.</span><span class="token function">applyToType</span><span class="token punctuation">(</span><span class="token string">&quot;Type&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>component<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>positions<span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> options
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="applytoposition" tabindex="-1"><a class="header-anchor" href="#applytoposition" aria-hidden="true">#</a> applyToPosition( )</h4><p>将标签应用于某一坐标</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">applyToPosition</span><span class="token punctuation">(</span>position<span class="token operator">:</span> DTVector3<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>CSS3DObject<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),J=n("p",null,"参数",-1),K=n("p",null,[n("code",null,"position:"),s(" 目标坐标")],-1),Q=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Array<CSS3DObject>")])])],-1),U=n("li",null,[n("p",null,"示例")],-1),X=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> poiText <span class="token operator">=</span> poiPlugin<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    text<span class="token operator">:</span> <span class="token string">&quot;testPoi&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
poiText<span class="token punctuation">.</span><span class="token function">applyToPosition</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clearall" tabindex="-1"><a class="header-anchor" href="#clearall" aria-hidden="true">#</a> clearAll( )</h3><p>清空所有标签</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">clearAll</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>CSS3DObject<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li><code>Array&lt;CSS3DObject&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

poiPlugin<span class="token punctuation">.</span><span class="token function">clearAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear( )</h3><p>清除某个 或 某组 目标的标签</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">clear</span><span class="token operator">:</span> <span class="token punctuation">(</span>list<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Component<span class="token operator">&lt;</span>WebglModel<span class="token operator">&gt;</span> <span class="token operator">|</span> DTVector3<span class="token operator">&gt;</span> <span class="token operator">|</span> Component<span class="token operator">&lt;</span>WebglModel<span class="token operator">&gt;</span> <span class="token operator">|</span> DTVector3<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),Y=n("p",null,"参数",-1),Z=n("p",null,[n("code",null,"list:"),s(" 目标")],-1),$=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Promise<void>")])])],-1),nn=n("li",null,[n("p",null,"示例")],-1),sn=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> componentGroup <span class="token operator">=</span> meta<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;AICamera&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
poiPlugin<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>componentGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dispose" tabindex="-1"><a class="header-anchor" href="#dispose" aria-hidden="true">#</a> dispose( )</h3><p>销毁所有标签，与 <a href="#clearall">clearAll( )</a> 的区别在于: 销毁了为 <strong>poi</strong> 插件创建的图层（一个全屏覆盖的 <strong>div</strong> 元素）</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">dispose</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载poi插件的步骤<span class="token operator">...</span>

poiPlugin<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> update( )</h3><p>更新，该方法会在每次渲染时 <strong>自动调用</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">update</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li>无</li></ul></li></ul><h3 id="addeventlistener" tabindex="-1"><a class="header-anchor" href="#addeventlistener" aria-hidden="true">#</a> addEventListener( )</h3><p>监听创建poi的鼠标事件，默认情况下poi可捕获鼠标事件</p><blockquote><p>注：如需防止poi捕获鼠标事件，可设置css参数：pointerEvents = &quot;none&quot;</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">addEventListener</span><span class="token operator">:</span> <span class="token punctuation">(</span>
    type<span class="token operator">:</span> ModelMouseEvent<span class="token punctuation">,</span> 
    <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>
        data<span class="token operator">:</span> <span class="token punctuation">{</span>
            target<span class="token operator">:</span> Component<span class="token operator">&lt;</span>WebglModel<span class="token operator">&gt;</span> <span class="token operator">|</span> DTVector3<span class="token punctuation">;</span>
            poi<span class="token operator">:</span> CSS3DObject<span class="token punctuation">;</span>
            event<span class="token operator">:</span> MouseEvent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),an=n("p",null,"参数",-1),tn=n("code",null,"type: ModelMouseEvent",-1),en={href:"/three/help/declare.html#eventtype",target:"_blank",rel:"noopener noreferrer"},pn=n("li",null,[n("code",null,"listener: (data: { target: Component<WebglModel> | DTVector3; poi: CSS3DObject; event: MouseEvent; }) => void"),s(" 事件回调")],-1),on=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"remove: ()=>void"),s(" 移除事件监听的函数句柄")])])],-1);function ln(cn,un){const l=o("badge"),i=o("ExternalLinkIcon"),e=o("RouterLink");return u(),r("div",null,[n("h1",k,[v,s(" poi2d "),a(l,{type:"danger",text:"v4.1.4"})]),m,n("div",h,[g,n("ul",null,[n("li",null,[s("参考: "),n("a",b,[s("CSS3DRender"),a(i)])])])]),y,n("ul",null,[n("li",null,[_,n("ul",null,[n("li",null,[f,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#textpoioptions"},{default:p(()=>[s("TextPoiOptions")]),_:1})])])])])]),x]),T,n("ul",null,[n("li",null,[q,n("ul",null,[n("li",null,[P,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#imagepoioptions"},{default:p(()=>[s("ImagePoiOptions")]),_:1})])])])])]),w]),C,n("ul",null,[n("li",null,[S,n("ul",null,[n("li",null,[D,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#htmlpoioptions"},{default:p(()=>[s("HtmlPoiOptions")]),_:1})])])])])]),O]),M,n("ul",null,[n("li",null,[I,n("ul",null,[n("li",null,[A,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/api/component.html"},{default:p(()=>[s("Component")]),_:1})])])]),n("li",null,[n("p",null,[E,s(),a(l,{type:"danger",text:"v4.1.4"}),s(" 拦截器回调函数，可以获取到 "),j,s(" 和 "),V,s(" ，继而修改配置参数（包括标签的坐标等）")])])])]),H,L]),N,n("ul",null,[n("li",null,[R,n("ul",null,[n("li",null,[W,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/api/component.html#type"},{default:p(()=>[s("Component.type")]),_:1})])])]),B])]),z,G]),F,n("ul",null,[n("li",null,[J,n("ul",null,[n("li",null,[K,n("ul",null,[n("li",null,[s("参数: "),a(e,{to:"/three/help/declare.html#dtvector3"},{default:p(()=>[s("DTVector3")]),_:1})])])])])]),Q,U]),X,n("ul",null,[n("li",null,[Y,n("ul",null,[n("li",null,[Z,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/api/component.html"},{default:p(()=>[s("Component")]),_:1}),s("; "),a(e,{to:"/three/help/declare.html#dtvector3"},{default:p(()=>[s("DTVector3")]),_:1})])])])])]),$,nn]),sn,n("ul",null,[n("li",null,[an,n("ul",null,[n("li",null,[tn,s(" 事件名称（eg: click） "),n("a",en,[s("ModelMouseEvent"),a(i)])]),pn])]),on])])}const dn=c(d,[["render",ln],["__file","poi2d.html.vue"]]);export{dn as default};
