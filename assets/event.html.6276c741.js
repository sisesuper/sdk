import{_ as c,r as p,o as l,c as i,a as s,b as n,d as a,w as u,e}from"./app.f18319b0.js";const k={},d=s("h1",{id:"自定义事件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#自定义事件","aria-hidden":"true"},"#"),n(" 自定义事件")],-1),r=s("code",null,"click",-1),v=s("code",null,"contextmenu",-1),m=s("code",null,"dbclick",-1),b=s("code",null,"hover",-1),h={href:"/three/api/defineevent.html",target:"_blank",rel:"noopener noreferrer"},f=s("code",null,"defineEvent",-1),g={href:"/three/api/eventemitter.html",target:"_blank",rel:"noopener noreferrer"},_=e(`<div class="custom-container warning"><p class="custom-container-title">注意</p><p>由于渲染方式的不同 <code>defineEvent</code> 又分为 <code>defineWebglEvent</code> 和 <code>defineUnityEvent</code> ， 但两个方法的 <strong>参数</strong> 和 <strong>返回值</strong> 是 <strong>一致</strong> 的。</p></div><h4 id="step1-定义事件" tabindex="-1"><a class="header-anchor" href="#step1-定义事件" aria-hidden="true">#</a> step1 - 定义事件</h4><ul><li>通过 <code>defineWebglEvent</code> 自定义 <code>Webgl</code> 事件</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineWebglEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-engine&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> DTEvent <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-engine/core/event&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getIntersects <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-engine/common/tool&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 事件常量</span>
<span class="token keyword">const</span> ModelEvent <span class="token operator">=</span> <span class="token punctuation">{</span>
    dbclick<span class="token operator">:</span> <span class="token string">&quot;dbclick&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> ModelMouseEvent <span class="token operator">=</span> <span class="token punctuation">{</span>
    dbclick<span class="token operator">:</span> <span class="token string">&#39;dblclick&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineWebglEvent</span><span class="token punctuation">(</span><span class="token string">&quot;dbclick&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">,</span> context<span class="token punctuation">,</span> meta<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 事件操作</span>
    <span class="token keyword">const</span> <span class="token function-variable function">onDblClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span>me<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> meta<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> intersects <span class="token operator">=</span> <span class="token function">getIntersects</span><span class="token punctuation">(</span>me<span class="token punctuation">,</span> meta<span class="token punctuation">.</span>el<span class="token operator">!</span><span class="token punctuation">,</span> meta<span class="token punctuation">.</span>camera<span class="token punctuation">,</span> meta<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DTEvent</span><span class="token punctuation">(</span>ModelMouseEvent<span class="token punctuation">.</span>dbclick<span class="token punctuation">,</span> macthedComponent<span class="token punctuation">,</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 选中</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intersects<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> intersects<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>object <span class="token keyword">instanceof</span> <span class="token class-name">Mesh</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 判断事件冒泡</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>event<span class="token punctuation">.</span>stopped<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                meta<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>ModelMouseEvent<span class="token punctuation">.</span>dbclick<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 判断事件是否禁用</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>macthedComponent<span class="token punctuation">.</span>disabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>ModelEvent<span class="token punctuation">.</span>dbclick<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 未选中</span>
            context<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>ModelEvent<span class="token punctuation">.</span>dbclick<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DTEvent</span><span class="token punctuation">(</span>ModelEvent<span class="token punctuation">.</span>dbclick<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> me<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">onDblClick</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> meta<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"/three/api/defineevent.html",target:"_blank",rel:"noopener noreferrer"},w=e(`<h4 id="step2-注册事件" tabindex="-1"><a class="header-anchor" href="#step2-注册事件" aria-hidden="true">#</a> step2 - 注册事件</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 将自定义事件挂载到meta实例上</span>
meta<span class="token punctuation">.</span><span class="token function">useExtension</span><span class="token punctuation">(</span>Dbclick<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),E=e(`<h4 id="step3-监听事件" tabindex="-1"><a class="header-anchor" href="#step3-监听事件" aria-hidden="true">#</a> step3 - 监听事件</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 事件常量</span>
<span class="token keyword">const</span> ModelEvent <span class="token operator">=</span> <span class="token punctuation">{</span>
    dbclick<span class="token operator">:</span> <span class="token string">&quot;dbclick&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// 选中项</span>
<span class="token keyword">let</span> selectedObjects <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
meta<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>ModelEvent<span class="token punctuation">.</span>dbclick<span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> DTEvent<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>model<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> object3D <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>model<span class="token punctuation">;</span>
        selectedObjects <span class="token operator">=</span> <span class="token punctuation">[</span>object3D<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        selectedObjects <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function x(q,M){const t=p("ExternalLinkIcon"),o=p("RouterLink");return l(),i("div",null,[d,s("p",null,[n("SDK默认集成了"),r,n("、"),v,n("、"),m,n("、"),b,n("四类事件，当然你也可以通过"),s("a",h,[n("defineEvent"),a(t)]),n("方法自定义事件,"),f,n("回调最终会挂载到容器根节点进行监听，回调中会基于"),s("a",g,[n("EventEmitter"),a(t)]),n("进行事件的派发。")]),_,s("blockquote",null,[s("p",null,[n("参考: "),s("a",y,[n("defineEvent"),a(t)])])]),w,s("blockquote",null,[s("p",null,[n("参考: "),a(o,{to:"/three/api/meta.html#useextension"},{default:u(()=>[n("meta.useExtension( )")]),_:1})])]),E])}const j=c(k,[["render",x],["__file","event.html.vue"]]);export{j as default};
