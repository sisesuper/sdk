import{_ as l,r as e,o as c,c as i,a as n,b as s,d as a,e as p}from"./app.f18319b0.js";const u={},r=n("h1",{id:"app",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#app","aria-hidden":"true"},"#"),s(" App")],-1),d=n("code",null,"APP",-1),k={href:"/miniapp/api/component.html",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,"参数",-1),h=n("code",null,"el",-1),v=n("code",null,"HTMLElement",-1),_=n("li",null,[n("p",null,[n("code",null,"config"),s(":"),n("code",null,"AppConfig")])],-1),b={href:"/miniapp/help/type.html#config",target:"_blank",rel:"noopener noreferrer"},f=n("li",null,[n("p",null,"示例")],-1),y=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> appConfig <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">App</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;appPreview&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> appConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render()</h3><p>渲染应用</p>`,4),g=n("p",null,"参数",-1),x=n("li",null,[n("p",null,[n("code",null,"options"),s(": "),n("code",null,"Partial<AppOptions> = {}")])],-1),w=n("li",null,[n("p",null,[n("code",null,"props"),s(": "),n("code",null,"Record<string, any> = {}")])],-1),L={href:"/miniapp/help/type.html#appoptions",target:"_blank",rel:"noopener noreferrer"},q=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Promise<boolean>")])])],-1),A=n("li",null,[n("p",null,"示例")],-1),B=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
app<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面渲染完成</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="load" tabindex="-1"><a class="header-anchor" href="#load" aria-hidden="true">#</a> load()</h3><p>从 url 加载应用并渲染</p><ul><li><p>参数</p><ul><li><p><code>url</code>:<code>string</code> 请求接口地址</p></li><li><p><code>props</code>:<code>Record&lt;string, any&gt;</code> 其他参数</p></li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;boolean&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>app<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&quot;/applite/system/app/info?appId=1674340534603935744&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">// 页面渲染完成</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flexible" tabindex="-1"><a class="header-anchor" href="#flexible" aria-hidden="true">#</a> flexible()</h3><p>设置应用弹性的方式</p>`,7),C=n("p",null,"参数",-1),I=n("li",null,[n("p",null,[n("code",null,"flex"),s(":"),n("code",null,"Flex"),s(" 弹性的方式")])],-1),P={href:"/miniapp/help/type.html#flex",target:"_blank",rel:"noopener noreferrer"},T=n("li",null,[n("p",null,"示例")],-1),E=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>app<span class="token punctuation">.</span><span class="token function">flexible</span><span class="token punctuation">(</span><span class="token string">&quot;zoom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 切换到页面自动缩放</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="theme" tabindex="-1"><a class="header-anchor" href="#theme" aria-hidden="true">#</a> theme()</h3><p>设置主题样式</p>`,3),N=n("p",null,"参数",-1),O=n("li",null,[n("p",null,[n("code",null,"theme"),s(":"),n("code",null,"ThemeOptions"),s(" 主题样式")])],-1),V={href:"/miniapp/help/type.html#themeoptions",target:"_blank",rel:"noopener noreferrer"},M=n("li",null,[n("p",null,"示例")],-1),F=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>app<span class="token punctuation">.</span><span class="token function">theme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;light&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 更换已有组件主题</span>
app<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>com<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  com<span class="token punctuation">.</span>setup<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">{</span> setTheme<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 图层组件</span>
<span class="token keyword">let</span> currentLayer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> hideLayer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> keyList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> layerList <span class="token operator">=</span> app<span class="token punctuation">.</span>layer<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> layerList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  keyList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> layer <span class="token operator">=</span> layerList<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  layer<span class="token punctuation">.</span>instance <span class="token operator">&amp;&amp;</span> currentLayer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
app<span class="token punctuation">.</span>layer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>keyList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> layerList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> layer <span class="token operator">=</span> layerList<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token operator">!</span>currentLayer<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> hideLayer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    layer<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>com<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      com<span class="token punctuation">.</span>setup<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">{</span> setTheme<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  app<span class="token punctuation">.</span>layer<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span>hideLayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mode" tabindex="-1"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> mode()</h3><p>设置开发或者预览模式</p>`,3),R=n("p",null,"参数",-1),z=n("li",null,[n("p",null,[n("code",null,"mode"),s(":"),n("code",null,"Mode"),s(" 模式")])],-1),H={href:"/miniapp/help/type.html#mode",target:"_blank",rel:"noopener noreferrer"},S=n("li",null,[n("p",null,"示例")],-1),j=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>app<span class="token punctuation">.</span><span class="token function">mode</span><span class="token punctuation">(</span><span class="token string">&quot;preview&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 切换到预览模式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="interceptor" tabindex="-1"><a class="header-anchor" href="#interceptor" aria-hidden="true">#</a> interceptor()</h3><p>设置拦截器</p>`,3),D=n("p",null,"参数",-1),G=n("li",null,[n("p",null,[n("code",null,"interceptor"),s(":"),n("code",null,"Interceptor"),s(" 拦截器配置")])],-1),J={href:"/miniapp/help/type.html#interceptor",target:"_blank",rel:"noopener noreferrer"},K=n("li",null,[n("p",null,"示例")],-1),Q=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>app<span class="token punctuation">.</span><span class="token function">interceptor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  request<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  response<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exports" tabindex="-1"><a class="header-anchor" href="#exports" aria-hidden="true">#</a> exports()</h3><p>导出应用全量配置</p><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li><code>any</code> 配置参数</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> config <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">exports</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5);function U(W,X){const t=e("ExternalLinkIcon"),o=e("Badge");return c(),i("div",null,[r,n("p",null,[s("创建 "),d,s(" 实例，继承 "),n("a",k,[s("Component"),a(t)])]),n("ul",null,[n("li",null,[m,n("ul",null,[n("li",null,[n("p",null,[h,s(":"),v,s(),a(o,{text:"必传"})])]),_,n("li",null,[n("p",null,[s("参考："),n("a",b,[s("AppConfig"),a(t)])])])])]),f]),y,n("ul",null,[n("li",null,[g,n("ul",null,[x,w,n("li",null,[n("p",null,[s("参考："),n("a",L,[s("AppOptions"),a(t)])])])])]),q,A]),B,n("ul",null,[n("li",null,[C,n("ul",null,[I,n("li",null,[n("p",null,[s("参考："),n("a",P,[s("Flex"),a(t)])])])])]),T]),E,n("ul",null,[n("li",null,[N,n("ul",null,[O,n("li",null,[n("p",null,[s("参考："),n("a",V,[s("ThemeOptions"),a(t)])])])])]),M]),F,n("ul",null,[n("li",null,[R,n("ul",null,[z,n("li",null,[n("p",null,[s("参考："),n("a",H,[s("Mode"),a(t)])])])])]),S]),j,n("ul",null,[n("li",null,[D,n("ul",null,[G,n("li",null,[n("p",null,[s("参考："),n("a",J,[s("Interceptor"),a(t)])])])])]),K]),Q])}const Z=l(u,[["render",U],["__file","app.html.vue"]]);export{Z as default};
