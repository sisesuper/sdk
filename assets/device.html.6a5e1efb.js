import{_ as i,r as c,o as l,c as u,a as n,b as s,d as a,w as p,e}from"./app.f18319b0.js";const r={},d=e('<h1 id="device" tabindex="-1"><a class="header-anchor" href="#device" aria-hidden="true">#</a> Device</h1><p>设备SDK模块类，可以提供读取空间设备资源的相关操作能力</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> list</h3><p>获取当前空间所有的设备元数据列表</p>',5),k=n("li",null,[n("p",null,[s("类型："),n("code",null,"DeviceMetaData[]")])],-1),v=n("li",null,[n("p",null,"示例")],-1),m=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span> Root <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Device <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span><span class="token punctuation">;</span>
<span class="token operator">...</span>
<span class="token keyword">const</span> device <span class="token operator">=</span> <span class="token keyword">await</span> root<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Device<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/Office/devices/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> list <span class="token operator">=</span> device<span class="token punctuation">.</span>list<span class="token punctuation">;</span>
<span class="token comment">// return  </span>
<span class="token comment">// devices: [{</span>
<span class="token comment">//             &quot;id&quot;: &quot;integer&quot;,</span>
<span class="token comment">//             &quot;spaceId&quot;: &quot;12032323&quot;,</span>
<span class="token comment">//             &quot;zhname&quot;: &quot;设备中文名称&quot;,</span>
<span class="token comment">//             &quot;name&quot;: &quot;string&quot;,</span>
<span class="token comment">//             &quot;driver&quot;: &quot;HitachiVRV&quot;,</span>
<span class="token comment">//             &quot;type&quot;: &quot;VRV&quot;,</span>
<span class="token comment">//             &quot;attrs&quot;: {</span>
<span class="token comment">//                 &quot;ref&quot;: &quot;string&quot;</span>
<span class="token comment">//             }</span>
<span class="token comment">//    },...]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> state()</h3><p>获取设备状态集合</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>DeviceMetaData<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),h=e(`<ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回类型</p><ul><li><code>Promise&lt;DeviceMetaData[]&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> states <span class="token operator">=</span> <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="findbyid" tabindex="-1"><a class="header-anchor" href="#findbyid" aria-hidden="true">#</a> findById()</h3><p>根据设备 <code>ID</code> 查询指定的设备SDK实例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">findById</span><span class="token operator">:</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Device
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),g=e(`<ul><li><p>参数</p><ul><li><code>id</code>: 设备 <code>ID</code></li></ul></li><li><p>返回类型</p><ul><li><code>Device</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> subDevice <span class="token operator">=</span> device<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token string">&quot;10010&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="getdrivers" tabindex="-1"><a class="header-anchor" href="#getdrivers" aria-hidden="true">#</a> getDrivers()</h3><p>获取当前设备集合的驱动元数据</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">getDrivers</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>DeviceDriver<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),b=e(`<ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回类型</p><ul><li><code>Promise&lt;DeviceDriver[]&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> deviceDrivers <span class="token operator">=</span> <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">getDrivers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),y={id:"cmd",tabindex:"-1"},f=n("a",{class:"header-anchor",href:"#cmd","aria-hidden":"true"},"#",-1),_=e(`<p>执行空间物模型设备相关指令下发（代替<a href="#%E5%8A%A8%E6%80%81%E6%8C%87%E4%BB%A4">原动态指令</a>）</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">cmd</span><span class="token punctuation">(</span>
  identifier<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  inputProperties<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">|</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),q=n("p",null,"参数",-1),w=n("li",null,[n("p",null,[n("code",null,"identifier"),s(": 指令标识符")])],-1),D=n("p",null,[n("code",null,"inputProperties"),s(": 指令入参 "),n("code",null,"{key:value, ...}"),s("【选传】")],-1),x=n("code",null,"key",-1),L=n("code",null,"value",-1),B=n("li",null,[n("p",null,"返回类型"),n("ul",null,[n("li",null,[n("code",null,"Promise<any>")])])],-1),P=n("li",null,[n("p",null,"示例")],-1),C=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code> <span class="token comment">// 开灯</span>
 <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> device<span class="token punctuation">.</span><span class="token function">cmd</span><span class="token punctuation">(</span><span class="token string">&quot;switch_status_set&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
   switch_status_value<span class="token operator">:</span> <span class="token number">1</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="弃用方法" tabindex="-1"><a class="header-anchor" href="#弃用方法" aria-hidden="true">#</a> 弃用方法</h3>`,2),R={id:"动态指令",tabindex:"-1"},S=n("a",{class:"header-anchor",href:"#动态指令","aria-hidden":"true"},"#",-1),V=n("s",null,"动态指令",-1),I=e(`<div class="custom-container danger"><p class="custom-container-title">警告</p><p>v2.0.0版本以后不再支持</p></div><p>根据具体设备的相关指令动态下发查询</p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> Light <span class="token operator">=</span> <span class="token keyword">await</span> root<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Device<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/Office/devices/Light&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 开灯</span>
Light<span class="token punctuation">.</span><span class="token function">turnOn</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><h3 id="addlistener" tabindex="-1"><a class="header-anchor" href="#addlistener" aria-hidden="true">#</a> addListener</h3><p>监听当前设备指令下发的消息推送</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">addListener</span><span class="token punctuation">(</span>
  <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>body<span class="token operator">:</span> SocketResponseBody<span class="token operator">&lt;</span><span class="token keyword">keyof</span> PayloadMap<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> 
  options<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>SocketConfig<span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),M=e(`<ul><li><p>参数</p><ul><li><p><code>callback</code>: <code>socket</code> 消息监听回调函数【必传】</p><ul><li><code>body</code>: 指令消息主体</li></ul></li><li><p><code>options</code>: <code>socket</code> 连接配置信息【选传】</p></li></ul></li><li><p>返回值</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> yingli46 <span class="token operator">=</span> <span class="token keyword">await</span> meta<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Space<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/yingli/46&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询46楼所有窗帘&quot;</span>
<span class="token keyword">let</span> curtains <span class="token operator">=</span> <span class="token keyword">await</span> yingli46<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Curtain<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;./devices/Curtain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 监听46所有窗帘的指令消息</span>
curtains<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>deviceData<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>deviceData<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="removelistener" tabindex="-1"><a class="header-anchor" href="#removelistener" aria-hidden="true">#</a> removeListener</h3><p>移除当前设备socket消息监听</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">removeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> yingli46 <span class="token operator">=</span> <span class="token keyword">await</span> meta<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Space<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;/yingli/46&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询46楼所有窗帘&quot;</span>
<span class="token keyword">let</span> curtains <span class="token operator">=</span> <span class="token keyword">await</span> yingli46<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">search</span><span class="token generic class-name"><span class="token operator">&lt;</span>Curtain<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;./devices/Curtain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 监听46所有窗帘的指令消息</span>
curtains<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>deviceData<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 移除46楼创建的sokcet消息监听</span>
curtains<span class="token punctuation">.</span><span class="token function">removeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function E(N,A){const t=c("RouterLink"),o=c("badge");return l(),u("div",null,[d,n("ul",null,[k,n("li",null,[n("p",null,[s("参考："),a(t,{to:"/digital/help/declare.html#devicemetadata"},{default:p(()=>[s("DeviceMetaData")]),_:1})])]),v]),m,n("blockquote",null,[n("p",null,[s("参考："),a(t,{to:"/digital/help/declare.html#devicemetadata"},{default:p(()=>[s("DeviceMetaData")]),_:1})])]),h,n("blockquote",null,[n("p",null,[s("参考："),a(t,{to:"/digital/help/declare.html#device"},{default:p(()=>[s("Device")]),_:1})])]),g,n("blockquote",null,[n("p",null,[s("参考："),a(t,{to:"/digital/help/declare.html#devicedriver"},{default:p(()=>[s("DeviceDriver")]),_:1})])]),b,n("h3",y,[f,s(" cmd() "),a(o,{text:"v2.0.0+"})]),_,n("ul",null,[n("li",null,[q,n("ul",null,[w,n("li",null,[D,n("ul",null,[n("li",null,[n("p",null,[x,s(": "),a(t,{to:"/digital/help/declare.html#property"},{default:p(()=>[s("标准物模型-属性")]),_:1}),s("-唯一标识符；")])]),n("li",null,[n("p",null,[L,s(": 属性值（具体数据格式约束参见"),a(t,{to:"/digital/help/declare.html#property"},{default:p(()=>[s("标准物模型-属性")]),_:1}),s("）")])])])])])]),B,P]),C,n("h4",R,[S,s(),V,s(),a(o,{type:"danger",text:"已弃用"})]),I,n("blockquote",null,[n("p",null,[s("参考："),a(t,{to:"/digital/help/declare.html#socketresponsebodydata"},{default:p(()=>[s("SocketResponseBodyData")]),_:1}),s("; "),a(t,{to:"/digital/help/declare.html#socketconfig"},{default:p(()=>[s("SocketConfig")]),_:1})])]),M])}const K=i(r,[["render",E],["__file","device.html.vue"]]);export{K as default};
