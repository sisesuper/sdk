import{_ as c,r as i,o as u,c as r,a as n,b as s,d as a,w as o,e}from"./app.f18319b0.js";const d={},k=n("h1",{id:"meta",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#meta","aria-hidden":"true"},"#"),s(" Meta")],-1),m=n("code",null,"Meta",-1),h=n("code",null,"SDK",-1),v=n("strong",null,"最重要",-1),b=n("code",null,"Camera",-1),g=n("code",null,"Scene",-1),_=n("code",null,"Renderer",-1),f=e('<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="container" tabindex="-1"><a class="header-anchor" href="#container" aria-hidden="true">#</a> container</h3><div class="custom-container tip"><p class="custom-container-title">容器</p><ul><li><p>类型: <code>HTMLElement</code></p></li><li><p>说明: HTML 元素，用于绘制三维场景的容器</p></li><li><p>注：在调用 <a href="#amount">amount( )</a> 后有值</p></li></ul></div><h3 id="component" tabindex="-1"><a class="header-anchor" href="#component" aria-hidden="true">#</a> component</h3>',4),y={class:"custom-container tip"},x=n("p",{class:"custom-container-title"},"根组件实例",-1),w=n("p",null,[s("类型: "),n("code",null,"Component<WebglModel> | undefined")],-1),C=n("li",null,[n("p",null,"说明: 组件实例引用，包括了对子组件的查询、过滤、添加、删除等方法")],-1),M=n("li",null,[n("p",null,"注：三维场景通过组件把所有模型组装成一个树状结构，通过组件本身以及树状结构的操作，可管理场景中的模型")],-1),q=n("h3",{id:"model",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#model","aria-hidden":"true"},"#"),s(" model")],-1),P={class:"custom-container tip"},j=n("p",{class:"custom-container-title"},"根模型实例",-1),O=n("p",null,[s("类型: "),n("code",null,"WebglModel | undefined")],-1),T=n("li",null,[n("p",null,"说明: 模型实例引用，其中包括了对子模型的控制，如：旋转、选中、禁用等方法")],-1),D={href:"https://threejs.org/docs/index.html?q=object#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},W=n("h3",{id:"renderer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#renderer","aria-hidden":"true"},"#"),s(" renderer")],-1),L={class:"custom-container tip"},I=n("p",{class:"custom-container-title"},"渲染器实例",-1),S=n("p",null,[s("类型: "),n("code",null,"WebglRenderer")],-1),U={href:"https://threejs.org/docs/index.html?q=render#api/zh/renderers/WebGLRenderer",target:"_blank",rel:"noopener noreferrer"},E=n("h3",{id:"scene",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#scene","aria-hidden":"true"},"#"),s(" scene")],-1),G={class:"custom-container tip"},R=n("p",{class:"custom-container-title"},"场景实例",-1),z=n("p",null,[s("类型: "),n("code",null,"WebglScene")],-1),H={href:"https://threejs.org/docs/index.html?q=Sc#api/zh/scenes/Scene",target:"_blank",rel:"noopener noreferrer"},N=n("h3",{id:"camera",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#camera","aria-hidden":"true"},"#"),s(" camera")],-1),V={class:"custom-container tip"},B=n("p",{class:"custom-container-title"},"相机实例",-1),F=n("p",null,[s("类型: "),n("code",null,"WebglCamera")],-1),K={href:"https://threejs.org/docs/index.html?q=camera#api/zh/cameras/PerspectiveCamera",target:"_blank",rel:"noopener noreferrer"},A=e(`<h3 id="plugin" tabindex="-1"><a class="header-anchor" href="#plugin" aria-hidden="true">#</a> plugin</h3><div class="custom-container tip"><p class="custom-container-title">插件实例</p><ul><li><p>类型: <code>Plugin</code></p></li><li><p>说明: 插件实例引用，用于挂载插件 或 管理已经挂载到 meta 上的插件</p></li></ul></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render( )</h3><p>渲染指定的模型场景</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//webgl</span>
<span class="token keyword">function</span> <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>modelUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> useMapping<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Component<span class="token operator">&lt;</span>WebglModel<span class="token operator">&gt;&gt;</span>

<span class="token comment">//unity</span>
<span class="token keyword">function</span> <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>spaceId<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> freshMapping<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Component<span class="token operator">&lt;</span>UnityModel<span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),J=e("<li><p>参数</p><ul><li><p><code>modelUrl:</code> 模型地址</p></li><li><p><code>spaceId:</code> 空间Id</p></li><li><p><code>freshMapping:</code> 刷新映射，默认 false</p></li><li><p><code>useMapping:</code> 是否使用映射，默认 false</p></li></ul></li>",1),Q=n("p",null,"返回值",-1),X=n("p",null,[n("code",null,"Promise<Component<WebglModel>>:"),s(" 组件实例")],-1),Y=n("li",null,[n("p",null,"示例")],-1),Z=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;模型地址&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),$={id:"compile",tabindex:"-1"},nn=n("a",{class:"header-anchor",href:"#compile","aria-hidden":"true"},"#",-1),sn=e(`<p>预编译指定的模型场景</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">compile</span><span class="token operator">:</span> <span class="token punctuation">(</span>modelUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>useMapping<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>force<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>  <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Object3D<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),an=n("li",null,[n("p",null,"参数"),n("ul",null,[n("li",null,[n("p",null,[n("code",null,"modelUrl:"),s(" 模型地址")])]),n("li",null,[n("p",null,[n("code",null,"useMapping:"),s(" 是否使用映射，默认 false")])]),n("li",null,[n("p",null,[n("code",null,"force:"),s(" 是否强制重新编译")])])])],-1),en=n("p",null,"返回值",-1),tn=n("p",null,[n("code",null,"Promise<Object3D>:"),s(" 组件实例")],-1),on={href:"https://threejs.org/docs/index.html?q=Obje#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},ln=n("li",null,[n("p",null,"示例")],-1),pn=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;模型地址&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="amount" tabindex="-1"><a class="header-anchor" href="#amount" aria-hidden="true">#</a> amount( )</h3><p>挂载场景，指定三维场景在页面上的渲染位置</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>在老的版本中如果已经挂载过，则 <strong>不允许</strong> 再次调用。如有重复挂载的场景，请升级至最新版的</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">amount</span><span class="token operator">:</span> <span class="token punctuation">(</span>el<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> HTMLElement<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li><code>el:</code> HTML元素的 id ，用于绘制三维场景的容器</li></ul></li><li><p>返回值</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">amount</span><span class="token punctuation">(</span><span class="token string">&quot;three-container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),cn={id:"reset",tabindex:"-1"},un=n("a",{class:"header-anchor",href:"#reset","aria-hidden":"true"},"#",-1),rn=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">reset</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;void&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dispose" tabindex="-1"><a class="header-anchor" href="#dispose" aria-hidden="true">#</a> dispose( )</h3><p>销毁根组件、渲染器、加载器、插件</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>为防止内存溢出，该方法需要在页面切换的时机，或其它任何不再显示三维场景时进行调用</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">dispose</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),dn={id:"loadoption",tabindex:"-1"},kn=n("a",{class:"header-anchor",href:"#loadoption","aria-hidden":"true"},"#",-1),mn=e(`<p>挂载场景，指定三维场景在页面上的渲染位置</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>如果已经挂载过，则 <strong>不允许</strong> 再次调用</p></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">loadOption</span><span class="token operator">:</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Options<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),hn=n("li",null,[n("p",null,"参数"),n("ul",null,[n("li",null,[n("code",null,"url:"),s(" 模型地址")])])],-1),vn=n("p",null,"返回值",-1),bn=n("p",null,[n("code",null,"Promise<Options>:"),s(" 配置")],-1),gn={href:"/three/help/declare.html#options",target:"_blank",rel:"noopener noreferrer"},_n=n("li",null,[n("p",null,"示例")],-1),fn=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">loadOption</span><span class="token punctuation">(</span>FloorMap<span class="token punctuation">.</span>floor1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>option <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createcomponent-badge-text-webgl" tabindex="-1"><a class="header-anchor" href="#createcomponent-badge-text-webgl" aria-hidden="true">#</a> createComponent( ) &lt;badge text=&quot;webgl/&gt;</h3><p>动态创建一个组件实例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">createComponent</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Options<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span> url<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Component<span class="token operator">&lt;</span>WebglModel<span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),yn=n("p",null,"参数",-1),xn=n("p",null,[n("code",null,"options:"),s(" 组件配置参数，也可以只传一个模型 url")],-1),wn=n("code",null,"url:",-1),Cn=n("p",null,"返回值",-1),Mn=n("p",null,[n("code",null,"Promise<Component<WebglModel>>:"),s(" 组件")],-1),qn=n("li",null,[n("p",null,"示例")],-1),Pn=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">createComponent</span><span class="token punctuation">(</span><span class="token string">&quot;模型地址 / 组件配置参数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>component<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  meta<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> search( )</h3><p>根据 <strong>类型</strong> 搜索组件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">search</span><span class="token operator">:</span> <span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> shallow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ComponentGroup<span class="token operator">&lt;</span>DTModel<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),jn=n("p",null,"参数",-1),On=n("p",null,[n("code",null,"type:"),s(" 组件真实类型")],-1),Tn=n("code",null,"shallow:",-1),Dn=n("ul",null,[n("li",null,"注意: 该参数只在 Unity 引擎中生效")],-1),Wn=n("p",null,"返回值",-1),Ln=n("p",null,[n("code",null,"ComponentGroup<DTModel>:"),s(" 组件组实例")],-1),In=n("li",null,[n("p",null,"示例")],-1),Sn=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> component <span class="token operator">=</span> meta<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;Type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get( )</h3><p>根据 <strong>id</strong> 获取组件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> shallow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Component<span class="token operator">&lt;</span>DTModel<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),Un=n("p",null,"参数",-1),En=n("li",null,[n("p",null,[n("code",null,"id:"),s(" 模型 id 或 业务 id（业务 id: IOT 设备 id ，数字空间 id 等）")])],-1),Gn=n("code",null,"shallow:",-1),Rn=n("ul",null,[n("li",null,"注意: 该参数只在 Unity 引擎中生效")],-1),zn=n("p",null,"返回值",-1),Hn=n("p",null,[n("code",null,"component:"),s(" 组件实例")],-1),Nn=n("li",null,[n("p",null,"示例")],-1),Vn=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> component <span class="token operator">=</span> meta<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ModelId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter( )</h3><p>自定义筛选组件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>component<span class="token operator">:</span> Component<span class="token operator">&lt;</span>DTModel<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> shallow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ComponentGroup<span class="token operator">&lt;</span>DTModel<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),Bn=n("p",null,"参数",-1),Fn=n("li",null,[n("p",null,[n("code",null,"callback:"),s(" 筛选规则回调函数")])],-1),Kn=n("code",null,"shallow:",-1),An=n("ul",null,[n("li",null,"注意: 该参数只在 Unity 引擎中生效")],-1),Jn=n("p",null,"返回值",-1),Qn=n("p",null,[n("code",null,"ComponentGroup:"),s(" 组件组实例")],-1),Xn=n("li",null,[n("p",null,"示例")],-1),Yn=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> component <span class="token operator">=</span> meta<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>child<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&quot;Type&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> child<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add" aria-hidden="true">#</a> add( )</h3><p>向场景中添加一个模型</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token punctuation">(</span>child<span class="token operator">:</span> Component<span class="token operator">&lt;</span>DTModel<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li><code>child:</code> 需要添加的组件实例</li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;void&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">createComponent</span><span class="token punctuation">(</span><span class="token string">&quot;模型地址&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  meta<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>componnet<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove( )</h3><p>从场景中移除对应的模型</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token punctuation">(</span>child<span class="token operator">:</span> Component<span class="token operator">&lt;</span>DTModel<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li><code>child:</code> 需要移除的组件实例</li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;void&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> component <span class="token operator">=</span> meta<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ModelId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
meta<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),Zn={id:"clear",tabindex:"-1"},$n=n("a",{class:"header-anchor",href:"#clear","aria-hidden":"true"},"#",-1),ns=e(`<p>清空场景</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">clear</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;void&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

meta<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function ss(as,es){const t=i("RouterLink"),p=i("ExternalLinkIcon"),l=i("badge");return u(),r("div",null,[k,n("p",null,[m,s(" 继承自 "),a(t,{to:"/three/api/eventemitter.html"},{default:o(()=>[s("EventEmitter")]),_:1}),s(" ，是数字孪生 "),h,s(),v,s(" 的对象，负责 "),b,s("、"),g,s("、"),_,s(" 等对象的初始化以及提供常见操作的快捷方法。")]),f,n("div",y,[x,n("ul",null,[n("li",null,[w,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/component.html"},{default:o(()=>[s("Component")]),_:1})])])]),C,M])]),q,n("div",P,[j,n("ul",null,[n("li",null,[O,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/model.html"},{default:o(()=>[s("WebglModel")]),_:1})])])]),T,n("li",null,[n("p",null,[s("注：模型属于三维场景中更底层的对象，属于 three.js 中 "),n("a",D,[s("Object3D"),a(p)]),s(" 的一个扩展实例，通过该实例可对模型本身进行操作")])])])]),W,n("div",L,[I,n("ul",null,[n("li",null,[S,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/renderer.html"},{default:o(()=>[s("WebglRenderder")]),_:1})])])]),n("li",null,[n("p",null,[s("说明: 基于 three.js 的 "),n("a",U,[s("Renderer"),a(p)]),s(" 实例，用于渲染器相关的配置")])])])]),E,n("div",G,[R,n("ul",null,[n("li",null,[z,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/scene.html"},{default:o(()=>[s("WebglScene")]),_:1})])])]),n("li",null,[n("p",null,[s("说明: 基于 three.js 的 "),n("a",H,[s("Scene"),a(p)]),s(" 实例，用于场景相关的配置")])])])]),N,n("div",V,[B,n("ul",null,[n("li",null,[F,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/camera.html"},{default:o(()=>[s("WebglCamera")]),_:1})])])]),n("li",null,[n("p",null,[s("说明：基于 three.js 的 "),n("a",K,[s("PerspectiveCamera"),a(p)]),s(" 实例，用于控制相机")])])])]),A,n("ul",null,[J,n("li",null,[Q,n("ul",null,[n("li",null,[X,n("ul",null,[n("li",null,[s("参考："),a(t,{to:"/three/api/component.html"},{default:o(()=>[s("Component")]),_:1})])])])])]),Y]),Z,n("h3",$,[nn,s(" compile( ) "),a(l,{text:"webgl"}),s(),a(l,{type:"danger",text:"v4.1.6"})]),sn,n("ul",null,[an,n("li",null,[en,n("ul",null,[n("li",null,[tn,n("ul",null,[n("li",null,[s("参考："),n("a",on,[s("Object3D"),a(p)])])])])])]),ln]),pn,n("h3",cn,[un,s(" reset( ) "),a(l,{text:"unity"}),s(),a(l,{type:"danger",text:"v4.1.0"})]),rn,n("h3",dn,[kn,s(" loadOption( ) "),a(l,{text:"webgl"}),s(),a(l,{type:"danger",text:"v4.1.6"})]),mn,n("ul",null,[hn,n("li",null,[vn,n("ul",null,[n("li",null,[bn,n("ul",null,[n("li",null,[s("参考："),n("a",gn,[s("Options"),a(p)])])])])])]),_n]),fn,n("ul",null,[n("li",null,[yn,n("ul",null,[n("li",null,[xn,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/help/declare.html#options"},{default:o(()=>[s("Options")]),_:1})])])]),n("li",null,[n("p",null,[wn,s(),a(l,{type:"danger",text:"v4.1.6"}),s(" 当在当前场景中渲染从 meta.json 渲染某一个空间时，请指定该参数，主要用来确保渲染的模型的位置与模型搭建时的位置保持一致")])])])]),n("li",null,[Cn,n("ul",null,[n("li",null,[Mn,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/component.html"},{default:o(()=>[s("Component")]),_:1})])])])])]),qn]),Pn,n("ul",null,[n("li",null,[jn,n("ul",null,[n("li",null,[On,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/component.html#type"},{default:o(()=>[s("Component.type")]),_:1})])])]),n("li",null,[n("p",null,[Tn,s(),a(l,{type:"danger",text:"v4.1.0"}),s(" 浅层搜索，默认为 true ，只在当前空间下搜索； 若传入 false ，则会在所有空间下搜索")]),Dn])])]),n("li",null,[Wn,n("ul",null,[n("li",null,[Ln,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/componnetgroup.html"},{default:o(()=>[s("ComponentGroup")]),_:1})])])])])]),In]),Sn,n("ul",null,[n("li",null,[Un,n("ul",null,[En,n("li",null,[n("p",null,[Gn,s(),a(l,{type:"danger",text:"v4.1.0"}),s(" 浅层搜索，默认为 true ，只在当前空间下搜索； 若传入 false ，则会在所有空间下搜索")]),Rn])])]),n("li",null,[zn,n("ul",null,[n("li",null,[Hn,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/componnet.html"},{default:o(()=>[s("Component")]),_:1})])])])])]),Nn]),Vn,n("ul",null,[n("li",null,[Bn,n("ul",null,[Fn,n("li",null,[n("p",null,[Kn,s(),a(l,{type:"danger",text:"v4.1.0"}),s(" 浅层筛选，默认为 true ，只在当前空间下筛选； 若传入 false ，则会在所有空间下筛选")]),An])])]),n("li",null,[Jn,n("ul",null,[n("li",null,[Qn,n("ul",null,[n("li",null,[s("参考: "),a(t,{to:"/three/api/componnetgroup.html"},{default:o(()=>[s("ComponentGroup")]),_:1})])])])])]),Xn]),Yn,n("h3",Zn,[$n,s(" clear( ) "),a(l,{text:"webgl"})]),ns])}const os=c(d,[["render",ss],["__file","meta.html.vue"]]);export{os as default};
