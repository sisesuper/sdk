import{_ as l,r as p,o,c as i,a as n,b as s,d as a,e as t}from"./app.f18319b0.js";const c={},u=t(`<h1 id="script-脚本" tabindex="-1"><a class="header-anchor" href="#script-脚本" aria-hidden="true">#</a> Script 脚本</h1><p>创建组件实例时 <code>new</code></p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> instance <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token string">&quot;componentId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> script <span class="token operator">=</span> instance<span class="token punctuation">.</span>script<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="invoke" tabindex="-1"><a class="header-anchor" href="#invoke" aria-hidden="true">#</a> invoke()</h3><p>触发指定的脚本代码</p>`,7),r=n("p",null,"参数",-1),d=n("code",null,"type",-1),h={href:"/miniapp/help/type.html#scripttype",target:"_blank",rel:"noopener noreferrer"},k=n("li",null,[n("p",null,[n("code",null,"key"),s(": "),n("code",null,"string")])],-1),_=n("li",null,[n("p",null,[n("code",null,"params"),s(": "),n("code",null,"Record<string, any>")])],-1),g=n("li",null,[n("p",null,"示例")],-1),v=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>script<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add" aria-hidden="true">#</a> add()</h3><p>增加一个脚本</p>`,3),m=n("p",null,"参数",-1),y=n("code",null,"type",-1),b={href:"/miniapp/help/type.html#scripttype",target:"_blank",rel:"noopener noreferrer"},f=n("li",null,[n("p",null,[n("code",null,"key"),s(": "),n("code",null,"string")])],-1),x=n("li",null,[n("p",null,[n("code",null,"content"),s(": "),n("code",null,"string")])],-1),q=n("li",null,[n("p",null,"示例")],-1),w=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>script<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get()</h3><p>获取一个脚本</p>`,3),S=n("p",null,"参数",-1),T=n("code",null,"type",-1),N={href:"/miniapp/help/type.html#scripttype",target:"_blank",rel:"noopener noreferrer"},V=n("li",null,[n("p",null,[n("code",null,"key"),s(": "),n("code",null,"string")])],-1),B=n("p",null,"返回值",-1),E={href:"/miniapp/help/type.html#script",target:"_blank",rel:"noopener noreferrer"},I=n("li",null,[n("p",null,"示例")],-1),L=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> script <span class="token operator">=</span> script<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="getmethod" tabindex="-1"><a class="header-anchor" href="#getmethod" aria-hidden="true">#</a> getMethod()</h3><p>获取脚本方法</p>`,3),R=n("p",null,"参数",-1),C=n("code",null,"type",-1),M={href:"/miniapp/help/type.html#scripttype",target:"_blank",rel:"noopener noreferrer"},F=n("li",null,[n("p",null,[n("code",null,"key"),s(": "),n("code",null,"string")])],-1),j=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Function")])])],-1),z=n("li",null,[n("p",null,"示例")],-1),A=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> fn <span class="token operator">=</span> script<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove()</h3><p>删除一个脚本</p>`,3),D=n("p",null,"参数",-1),G=n("code",null,"type",-1),H={href:"/miniapp/help/type.html#scripttype",target:"_blank",rel:"noopener noreferrer"},J=n("li",null,[n("p",null,[n("code",null,"key"),s(": "),n("code",null,"string")])],-1),K=n("li",null,[n("p",null,"示例")],-1),O=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>script<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="getrawstr" tabindex="-1"><a class="header-anchor" href="#getrawstr" aria-hidden="true">#</a> getRawStr()</h3><p>获取<code>raw</code>的代码片段</p><ul><li><p>返回值</p><ul><li><code>string</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> scriptStr <span class="token operator">=</span> script<span class="token punctuation">.</span><span class="token function">getRawStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="exports" tabindex="-1"><a class="header-anchor" href="#exports" aria-hidden="true">#</a> exports()</h3><p>导出</p><ul><li><p>返回值</p><ul><li><code>Script[]</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> scriptList <span class="token operator">=</span> script<span class="token punctuation">.</span><span class="token function">exports</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear()</h3><p>清空</p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>script<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13);function P(Q,U){const e=p("ExternalLinkIcon");return o(),i("div",null,[u,n("ul",null,[n("li",null,[r,n("ul",null,[n("li",null,[n("p",null,[d,s(": "),n("a",h,[s("ScriptType"),a(e)])])]),k,_])]),g]),v,n("ul",null,[n("li",null,[m,n("ul",null,[n("li",null,[n("p",null,[y,s(": "),n("a",b,[s("ScriptType"),a(e)])])]),f,x])]),q]),w,n("ul",null,[n("li",null,[S,n("ul",null,[n("li",null,[n("p",null,[T,s(": "),n("a",N,[s("ScriptType"),a(e)])])]),V])]),n("li",null,[B,n("ul",null,[n("li",null,[n("a",E,[s("Script"),a(e)])])])]),I]),L,n("ul",null,[n("li",null,[R,n("ul",null,[n("li",null,[n("p",null,[C,s(": "),n("a",M,[s("ScriptType"),a(e)])])]),F])]),j,z]),A,n("ul",null,[n("li",null,[D,n("ul",null,[n("li",null,[n("p",null,[G,s(": "),n("a",H,[s("ScriptType"),a(e)])])]),J])]),K]),O])}const X=l(c,[["render",P],["__file","script.html.vue"]]);export{X as default};
