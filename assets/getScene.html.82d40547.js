import{_ as c,r as p,o as u,c as i,a,b as n,d as s,w as e,e as l}from"./app.f18319b0.js";const k={},r={id:"获取场景实例",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#获取场景实例","aria-hidden":"true"},"#",-1),v=l(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Tacos<span class="token punctuation">,</span> <span class="token punctuation">{</span>Root<span class="token punctuation">,</span> SceneSDK<span class="token punctuation">,</span> SceneEventType<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/tacos-sdk&quot;</span>

Tacos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 连接参数</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> core <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> root <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Root<span class="token punctuation">)</span>
    root<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        event<span class="token punctuation">.</span>messageType <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>messageType<span class="token punctuation">,</span> event<span class="token punctuation">)</span>
        <span class="token keyword">let</span> <span class="token punctuation">{</span>data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token operator">=</span> event
        data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>event<span class="token punctuation">.</span>eventCode <span class="token operator">===</span> SceneEventType<span class="token punctuation">.</span><span class="token constant">SCENE_START</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">let</span> scene <span class="token operator">=</span> core<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>SceneSDK<span class="token punctuation">,</span> <span class="token punctuation">{</span>source<span class="token operator">:</span> item<span class="token punctuation">.</span>source<span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token keyword">let</span> sceneInstance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">active</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function m(_,b){const o=p("badge"),t=p("RouterLink");return u(),i("div",null,[a("h1",r,[d,n(" 获取场景实例 "),s(o,{text:"v2.0.0+"})]),v,a("blockquote",null,[a("p",null,[n("参考: "),s(t,{to:"/digital/help/declare.html#core"},{default:e(()=>[n("Core")]),_:1}),n("; "),s(t,{to:"/digital/api/root.html#addlistener"},{default:e(()=>[n("Root.addListener()")]),_:1}),n("; "),s(t,{to:"/digital/api/scene.html"},{default:e(()=>[n("Scene")]),_:1})])])])}const h=c(k,[["render",m],["__file","getScene.html.vue"]]);export{h as default};
