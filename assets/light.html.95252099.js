import{_ as c,r as l,o as r,c as u,a as n,b as s,d as a,w as o,e as t}from"./app.f18319b0.js";const d={},h={id:"light",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#light","aria-hidden":"true"},"#",-1),k=t('<p>该插件用于创建光源，支持三种光源：<strong>环境光(AmbientLight)</strong> 、 <strong>平行光(DirectionalLight)</strong> 、 <strong>聚光灯(SpotLight)</strong> 。环境光会均匀照亮场景中的所有物体，平行光是沿着特定方向发射的光线，聚光灯的光线从一个点沿着一个方向射出，随着距离变远，光线圆锥体的尺寸也逐渐增大。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>该插件为默认插件，在 <code>meta</code> 实例化后会自动挂载 <strong>两个</strong> 该插件，分别是 <strong>一个环境光</strong> 和 <strong>一个平行光</strong> 。</p></div>',2),v=n("li",null,[n("p",null,"插件名称"),n("p",null,[n("strong",null,"light")])],-1),m=n("p",null,"初始参数",-1),_=n("p",null,[n("code",null,"props: DTLight"),s(" 光源配置参数")],-1),b=n("li",null,[n("p",null,"注: 初始参数可以为空，若传入了初始参数，则会在插件挂载后，立即创建一个光源")],-1),f=n("li",null,[n("p",null,"示例")],-1),x=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> webglPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-enging&quot;</span>
<span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> lightPlugin <span class="token operator">=</span> meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>webglPlugin<span class="token punctuation">.</span><span class="token function">light</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token string">&quot;SpotLight&quot;</span><span class="token punctuation">,</span>
    color<span class="token operator">:</span> <span class="token string">&quot;0xffffff&quot;</span><span class="token punctuation">,</span>
    intensity<span class="token operator">:</span> <span class="token number">0.8</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="lights" tabindex="-1"><a class="header-anchor" href="#lights" aria-hidden="true">#</a> lights</h3>`,3),y={class:"custom-container tip"},L=n("p",{class:"custom-container-title"},"光源数组",-1),q={href:"https://threejs.org/docs/index.html?q=light#api/zh/lights/Light",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,[n("p",null,"说明: 用于保存该插件创建的所有光源")],-1),P=t(`<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="createlight" tabindex="-1"><a class="header-anchor" href="#createlight" aria-hidden="true">#</a> createLight( )</h3><p>创建光源</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">createLight</span><span class="token operator">:</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> DTLight<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Light
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),D=n("p",null,"参数",-1),T=n("p",null,[n("code",null,"options:"),s(" 光源配置参数")],-1),N=n("p",null,"返回值",-1),V=n("p",null,[n("code",null,"light:"),s(" 光源实例")],-1),j={href:"https://threejs.org/docs/index.html?q=light#api/zh/lights/Light",target:"_blank",rel:"noopener noreferrer"},z=n("li",null,[n("p",null,"示例")],-1),B=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载light插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> light1 <span class="token operator">=</span> lightPlugin<span class="token punctuation">.</span><span class="token function">createLight</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token string">&quot;AmbientLight&quot;</span><span class="token punctuation">,</span>
    color<span class="token operator">:</span> <span class="token string">&quot;0xffffff&quot;</span><span class="token punctuation">,</span>
    intensity<span class="token operator">:</span> <span class="token number">0.8</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove( )</h3><p>删除指定光源</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token punctuation">(</span>light<span class="token operator">:</span> Light<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),E=n("p",null,"参数",-1),S=n("p",null,[n("code",null,"light:"),s(" 光源实例")],-1),A={href:"https://threejs.org/docs/index.html?q=light#api/zh/lights/Light",target:"_blank",rel:"noopener noreferrer"},C=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,"无")])],-1),I=n("li",null,[n("p",null,"示例")],-1),R=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载light插件的步骤<span class="token operator">...</span>

lightPlugin<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>light1<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear( )</h3><p>清除该插件创建的所有光源</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">clear</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载light插件的步骤<span class="token operator">...</span>

lightPlugin<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function F(G,H){const p=l("badge"),i=l("RouterLink"),e=l("ExternalLinkIcon");return r(),u("div",null,[n("h1",h,[g,s(" light "),a(p,{text:"默认插件"})]),k,n("ul",null,[v,n("li",null,[m,n("ul",null,[n("li",null,[_,n("ul",null,[n("li",null,[n("p",null,[s("参考: "),a(i,{to:"/three/help/declare.html#dtlight"},{default:o(()=>[s("DTLight")]),_:1})])]),b])])])]),f]),x,n("div",y,[L,n("ul",null,[n("li",null,[n("p",null,[s("类型: "),n("a",q,[s("Light"),a(e)])])]),w])]),P,n("ul",null,[n("li",null,[D,n("ul",null,[n("li",null,[T,n("ul",null,[n("li",null,[s("参考: "),a(i,{to:"/three/help/declare.html#dtlight"},{default:o(()=>[s("DTLight")]),_:1})])])])])]),n("li",null,[N,n("ul",null,[n("li",null,[V,n("ul",null,[n("li",null,[s("参考: "),n("a",j,[s("Light"),a(e)])])])])])]),z]),B,n("ul",null,[n("li",null,[E,n("ul",null,[n("li",null,[S,n("ul",null,[n("li",null,[s("参考: "),n("a",A,[s("Light"),a(e)])])])])])]),C,I]),R])}const K=c(d,[["render",F],["__file","light.html.vue"]]);export{K as default};
