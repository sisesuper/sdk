import{_ as l,r as o,o as i,c as u,a as n,b as s,d as a,w as p,e as t}from"./app.f18319b0.js";const r={},d=t(`<h1 id="全局" tabindex="-1"><a class="header-anchor" href="#全局" aria-hidden="true">#</a> 全局</h1><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="createwebglengine" tabindex="-1"><a class="header-anchor" href="#createwebglengine" aria-hidden="true">#</a> createWebglEngine( )</h3><p>创建 <code>webgl</code> 引擎</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createWebglEngine</span><span class="token punctuation">(</span>
    callback<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> WebglConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> WebglConfig
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Meta<span class="token operator">&lt;</span>WebglCreator<span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),k=n("p",null,"参数",-1),v=n("p",null,[n("code",null,"callback?: (config: WebglConfig) => WebglConfig"),s(" 引擎配置定义构造器")],-1),m=n("p",null,"返回值",-1),g=n("p",null,[n("code",null,"Promise<Meta<WebglCreator>>:"),s(" meta实例")],-1),b=n("li",null,[n("p",null,"示例")],-1),h=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> onUnmounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createWebglEngine <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-engine&quot;</span>

<span class="token keyword">let</span> meta<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">initWebglDtEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">createWebglEngine</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        meta <span class="token operator">=</span> instance<span class="token punctuation">;</span>
        meta<span class="token punctuation">.</span><span class="token function">amount</span><span class="token punctuation">(</span><span class="token string">&quot;three-container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        meta<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;模型地址&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">initWebglDtEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">onUnmounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    meta <span class="token operator">&amp;&amp;</span> meta<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createnodeserver" tabindex="-1"><a class="header-anchor" href="#createnodeserver" aria-hidden="true">#</a> createNodeServer( )</h3><p>创建 <code>socket</code> 服务</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createNodeServer</span><span class="token punctuation">(</span>options<span class="token operator">:</span> NodeServerConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>NodeServer<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),f=n("p",null,"参数",-1),_=n("p",null,[n("code",null,"options: "),s(" 同socket通信配置对象")],-1),y={href:"/digital/help/declare.html#socketconfig",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"Promise<NodeServer>:"),s(" nodeServer实例")])])],-1),x=n("li",null,[n("p",null,"示例")],-1),W=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createNodeServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-engine&quot;</span>
<span class="token keyword">let</span> meta<span class="token operator">:</span> Meta<span class="token operator">&lt;</span>UnityCreator<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">initUnityDtEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">createNodeServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&quot;ws://xxxxxxxx&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">initUnityDtEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function C(E,N){const e=o("RouterLink"),c=o("ExternalLinkIcon");return i(),u("div",null,[d,n("ul",null,[n("li",null,[k,n("ul",null,[n("li",null,[v,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#webglconfig"},{default:p(()=>[s("WebglConfig")]),_:1})])])])])]),n("li",null,[m,n("ul",null,[n("li",null,[g,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/api/meta.html"},{default:p(()=>[s("Meta")]),_:1})])])])])]),b]),h,n("ul",null,[n("li",null,[f,n("ul",null,[n("li",null,[_,n("ul",null,[n("li",null,[s("参考: "),n("a",y,[s("SocketConfig"),a(c)])])])])])]),w,x]),W])}const S=l(r,[["render",C],["__file","global.html.vue"]]);export{S as default};
