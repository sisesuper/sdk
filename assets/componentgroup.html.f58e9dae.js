import{_ as o,r as t,o as p,c,a as n,b as s,d as i,w as l,e as a}from"./app.f18319b0.js";const r={},u=a('<h1 id="componentgroup" tabindex="-1"><a class="header-anchor" href="#componentgroup" aria-hidden="true">#</a> ComponentGroup</h1><p>组件组对象，用于表示多个组件，并包含对所有组件的操作。</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="isgroup" tabindex="-1"><a class="header-anchor" href="#isgroup" aria-hidden="true">#</a> isGroup</h3><div class="custom-container tip"><p class="custom-container-title">是否为组件组对象的标识符</p><ul><li>类型：<code>boolean</code></li></ul></div><h3 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> model</h3>',6),d={class:"custom-container tip"},k=n("p",{class:"custom-container-title"},"对象中的所有模型",-1),m=n("p",null,[s("类型："),n("code",null,"DTModelGroup<M extends DTModel>")],-1),v=a(`<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="removefromparent" tabindex="-1"><a class="header-anchor" href="#removefromparent" aria-hidden="true">#</a> removeFromParent( )</h3><p>将 <strong>Group</strong> 中的所有组件包括三维模型从其父组件中移除，不销毁</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token keyword">async</span> <span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;void&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> rootComponent <span class="token operator">=</span> meta<span class="token punctuation">.</span>component<span class="token punctuation">;</span>
<span class="token keyword">const</span> componentGroup <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;Type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
componentGroup<span class="token punctuation">.</span><span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dispose" tabindex="-1"><a class="header-anchor" href="#dispose" aria-hidden="true">#</a> dispose( )</h3><p>将 <strong>Group</strong> 中的所有组件销毁</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token keyword">async</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;void&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> rootComponent <span class="token operator">=</span> meta<span class="token punctuation">.</span>component<span class="token punctuation">;</span>
<span class="token keyword">const</span> componentGroup <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;Type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
componentGroup<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear( )</h3><p>将 <strong>Group</strong> 中的所有组件的子组件清空</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token keyword">async</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li>无</li></ul></li><li><p>返回值</p><ul><li><code>void</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> rootComponent <span class="token operator">=</span> meta<span class="token punctuation">.</span>component<span class="token punctuation">;</span>
<span class="token keyword">const</span> componentGroup <span class="token operator">=</span> rootComponent<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;Type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
componentGroup<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function h(g,b){const e=t("RouterLink");return p(),c("div",null,[u,n("div",d,[k,n("ul",null,[n("li",null,[m,n("ul",null,[n("li",null,[s("参考: "),i(e,{to:"/three/help/declare.html#dtmodelgroup"},{default:l(()=>[s("DTModelGroup")]),_:1})])])])])]),v])}const f=o(r,[["render",h],["__file","componentgroup.html.vue"]]);export{f as default};
