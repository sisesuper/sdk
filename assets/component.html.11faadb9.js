import{_ as o,r as i,o as p,c,a as n,b as a,d as e,e as t}from"./app.f18319b0.js";const l={},u=t(`<h1 id="component" tabindex="-1"><a class="header-anchor" href="#component" aria-hidden="true">#</a> Component</h1><p>创建 <code>Component</code> 实例</p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> instance <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span><span class="token string">&quot;radar1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="el" tabindex="-1"><a class="header-anchor" href="#el" aria-hidden="true">#</a> el</h3><div class="custom-container tip"><p class="custom-container-title">组件 dom</p><ul><li>类型：<code>HTMLElement</code></li></ul></div><h3 id="uid" tabindex="-1"><a class="header-anchor" href="#uid" aria-hidden="true">#</a> uid</h3><div class="custom-container tip"><p class="custom-container-title">组件唯一标识</p><ul><li>类型：<code>string</code></li></ul></div><h3 id="instance" tabindex="-1"><a class="header-anchor" href="#instance" aria-hidden="true">#</a> instance</h3><div class="custom-container tip"><p class="custom-container-title">获取自定义组件实例化后的自定义对象</p><ul><li>用于二次开发时直接获取自定义组件暴露的对象</li></ul></div><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3>`,12),d={class:"custom-container tip"},r=n("p",{class:"custom-container-title"},"类型：用于区分组件、图层、组、画布等",-1),h=n("li",null,[a("类型："),n("code",null,"ComponentType")],-1),k={href:"/miniapp/help/type.html#componenttype",target:"_blank",rel:"noopener noreferrer"},m=t('<h3 id="label" tabindex="-1"><a class="header-anchor" href="#label" aria-hidden="true">#</a> label</h3><div class="custom-container tip"><p class="custom-container-title">组件的中文标签名字</p><ul><li>类型：<code>string</code></li></ul></div><h3 id="locked" tabindex="-1"><a class="header-anchor" href="#locked" aria-hidden="true">#</a> locked</h3><div class="custom-container tip"><p class="custom-container-title">锁定状态</p><ul><li><p>锁定后的组件不可选中</p></li><li><p>类型：<code>boolean</code></p></li></ul></div><h3 id="version" tabindex="-1"><a class="header-anchor" href="#version" aria-hidden="true">#</a> version</h3><div class="custom-container tip"><p class="custom-container-title">版本</p><ul><li>类型：<code>string</code></li></ul></div><h3 id="visible" tabindex="-1"><a class="header-anchor" href="#visible" aria-hidden="true">#</a> visible</h3><div class="custom-container tip"><p class="custom-container-title">显示&amp;隐藏</p><ul><li>类型：<code>boolean</code></li></ul></div><h3 id="parent" tabindex="-1"><a class="header-anchor" href="#parent" aria-hidden="true">#</a> parent</h3><div class="custom-container tip"><p class="custom-container-title">父组件</p><ul><li>类型：<code>Component</code></li></ul></div><h3 id="index" tabindex="-1"><a class="header-anchor" href="#index" aria-hidden="true">#</a> index</h3><div class="custom-container tip"><p class="custom-container-title">组件下标</p><ul><li>类型：<code>number</code></li></ul></div><h3 id="top" tabindex="-1"><a class="header-anchor" href="#top" aria-hidden="true">#</a> top</h3><div class="custom-container tip"><p class="custom-container-title">最外层组件</p><ul><li>类型：<code>Component</code></li></ul></div><h3 id="action" tabindex="-1"><a class="header-anchor" href="#action" aria-hidden="true">#</a> action</h3>',15),v={class:"custom-container tip"},b=n("p",{class:"custom-container-title"},"动作",-1),g={href:"/miniapp/api/action.html",target:"_blank",rel:"noopener noreferrer"},f=n("h3",{id:"script",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#script","aria-hidden":"true"},"#"),a(" script")],-1),_={class:"custom-container tip"},y=n("p",{class:"custom-container-title"},"脚本",-1),x={href:"/miniapp/api/script.html",target:"_blank",rel:"noopener noreferrer"},q=n("h3",{id:"layer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#layer","aria-hidden":"true"},"#"),a(" layer")],-1),C={class:"custom-container tip"},w=n("p",{class:"custom-container-title"},"图层",-1),S={href:"/miniapp/api/layer.html",target:"_blank",rel:"noopener noreferrer"},E=n("h3",{id:"animation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#animation","aria-hidden":"true"},"#"),a(" animation")],-1),O={class:"custom-container tip"},A=n("p",{class:"custom-container-title"},"动画",-1),L={href:"/miniapp/api/animation.html",target:"_blank",rel:"noopener noreferrer"},D=t('<h3 id="style" tabindex="-1"><a class="header-anchor" href="#style" aria-hidden="true">#</a> style</h3><div class="custom-container tip"><p class="custom-container-title">样式</p><ul><li>类型：<code>Partial&lt;CSSStyleDeclaration&gt;</code></li></ul></div><h3 id="attribute" tabindex="-1"><a class="header-anchor" href="#attribute" aria-hidden="true">#</a> attribute</h3><div class="custom-container tip"><p class="custom-container-title">属性</p><ul><li>类型：<code>Record&lt;string, any&gt;</code></li></ul></div><h3 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> source</h3>',5),I={class:"custom-container tip"},N=n("p",{class:"custom-container-title"},"数据源",-1),T=n("li",null,[a("类型："),n("code",null,"Array<Source>")],-1),B={href:"/miniapp/help/type.html#source",target:"_blank",rel:"noopener noreferrer"},R=t(`<h3 id="children" tabindex="-1"><a class="header-anchor" href="#children" aria-hidden="true">#</a> children</h3><div class="custom-container tip"><p class="custom-container-title">子组件</p><ul><li>类型：<code>Component[]</code></li></ul></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> search()</h3><p>根据类型：查询组件列表</p><ul><li><p>参数</p><ul><li><code>type</code>: <code>string</code> 类型，包括 <code>component、group、layer、 page</code></li></ul></li><li><p>返回值</p><ul><li><code>Component[]</code> 查询到的组件列表</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> list <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取所有组件</span>
<span class="token keyword">let</span> list <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;layer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取所有图层</span>
<span class="token keyword">let</span> list <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;group&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取所有组</span>
<span class="token keyword">let</span> list <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取画布</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="forceupdate" tabindex="-1"><a class="header-anchor" href="#forceupdate" aria-hidden="true">#</a> forceUpdate()</h3><p>强制更新</p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove()</h3><p>移除当前组件</p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="removechild" tabindex="-1"><a class="header-anchor" href="#removechild" aria-hidden="true">#</a> removeChild()</h3><p>移除子组件</p><ul><li><p>参数</p><ul><li><code>component</code>: <code>Component | string</code> 组件 / 组件 <code>uid</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token string">&quot;uid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="insertbefore" tabindex="-1"><a class="header-anchor" href="#insertbefore" aria-hidden="true">#</a> insertBefore()</h3><p>在指定的位置插入组件</p>`,21),K=n("p",null,"参数",-1),V=n("li",null,[n("p",null,[n("code",null,"component"),a(": "),n("code",null,"Component | ComponentOptions | Array<Component | ComponentOptions>"),a(" 组件")])],-1),F=n("li",null,[n("p",null,[n("code",null,"index?"),a(": "),n("code",null,"number"),a(" 插入位置")])],-1),P={href:"/miniapp/help/type.html#componentoptions",target:"_blank",rel:"noopener noreferrer"},U=n("li",null,[n("p",null,"示例")],-1),H=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>ComponentOptions<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="appendchild" tabindex="-1"><a class="header-anchor" href="#appendchild" aria-hidden="true">#</a> appendChild()</h3><p>在末尾添加组件</p>`,3),M=n("p",null,"参数",-1),$=n("li",null,[n("p",null,[n("code",null,"component"),a(": "),n("code",null,"Component | ComponentOptions | Array<Component | ComponentOptions>"),a(" 组件")])],-1),j={href:"/miniapp/help/type.html#componentoptions",target:"_blank",rel:"noopener noreferrer"},z=n("li",null,[n("p",null,"示例")],-1),G=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>ComponentOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear()</h3><p>清空所有组件</p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="createextension" tabindex="-1"><a class="header-anchor" href="#createextension" aria-hidden="true">#</a> createExtension()</h3><p>创建组件自定义属性实例</p><ul><li><p>参数</p><ul><li><code>props?</code>: <code>Record&lt;string, any&gt;</code> 组件</li></ul></li><li><p>返回值</p><ul><li><code>Promise&lt;ReturnType&lt;typeof createExtension&gt; | undefined&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance
  <span class="token punctuation">.</span><span class="token function">createExtension</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    options<span class="token operator">:</span> instance<span class="token punctuation">.</span>$options<span class="token punctuation">,</span>
    type<span class="token operator">:</span> <span class="token string">&quot;attribute&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>attribute<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    attribute<span class="token punctuation">.</span><span class="token function">amount</span><span class="token punctuation">(</span><span class="token string">&quot;attribute&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="addeventlistener" tabindex="-1"><a class="header-anchor" href="#addeventlistener" aria-hidden="true">#</a> addEventListener()</h3><p>监听 dom 事件</p><ul><li><p>参数</p><ul><li><p><code>type</code>: <code>DomEvent</code> 事件类型</p></li><li><p><code>fn</code>: <code>Function</code></p></li><li><p><code>options?</code>: <code>boolean | Record&lt;string, any&gt;</code> 参数</p></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="removeeventlistener" tabindex="-1"><a class="header-anchor" href="#removeeventlistener" aria-hidden="true">#</a> removeEventListener()</h3><p>删除 dom 事件</p><ul><li><p>参数</p><ul><li><p><code>type</code>: <code>DomEvent</code> 事件类型</p></li><li><p><code>fn</code>: <code>Function</code></p></li><li><p><code>options?</code>: <code>boolean | Record&lt;string, any&gt;</code> 参数</p></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dispatchevent" tabindex="-1"><a class="header-anchor" href="#dispatchevent" aria-hidden="true">#</a> dispatchEvent()</h3><p>触发一个事件</p><ul><li><p>参数</p><ul><li><code>event</code>: <code>Event</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>instance<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="createapi" tabindex="-1"><a class="header-anchor" href="#createapi" aria-hidden="true">#</a> createApi()</h3><p>创建 api</p><ul><li><p>参数</p><ul><li><code>api</code>: 定义好的 <code>api</code> 接口</li></ul></li><li><p>返回值</p><ul><li><code>&lt;T extends (...args: any) =&gt; any&gt;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/miniapp-engine&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> api <span class="token operator">=</span> defineApi（<span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">getData</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> panelId<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/load&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> apiInstance <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">createApi</span><span class="token punctuation">(</span>api<span class="token punctuation">)</span><span class="token punctuation">;</span>
apiInstance<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exportsource" tabindex="-1"><a class="header-anchor" href="#exportsource" aria-hidden="true">#</a> exportSource()</h3><p>导出数据</p><ul><li><p>参数</p><ul><li><p><code>key</code>: <code>string</code> 组件包名称</p></li><li><p><code>name</code>: <code>string | undefined</code> 组件名称</p></li><li><p><code>data</code>: <code>any</code> 导出数据</p></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> data <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">exportSource</span><span class="token punctuation">(</span><span class="token string">&quot;currentSpace&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;空间数据&quot;</span><span class="token punctuation">,</span> component<span class="token punctuation">.</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="usesource" tabindex="-1"><a class="header-anchor" href="#usesource" aria-hidden="true">#</a> useSource()</h3><p>使用数据</p><ul><li><p>参数</p><ul><li><p><code>key</code>: <code>string</code></p><ul><li><p><code>key</code>格式: <code>componentName:componentKey:sourceKey</code></p></li><li><p>例如: <code>&quot;canvas:canvas:currentSpace&quot;</code></p></li></ul></li></ul></li><li><p>返回值</p><ul><li><code>Source[]</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> data <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">useSource</span><span class="token punctuation">(</span><span class="token string">&quot;canvas:canvas:currentSpace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="subscribesource" tabindex="-1"><a class="header-anchor" href="#subscribesource" aria-hidden="true">#</a> subscribeSource()</h3><p>注册数据监听</p><ul><li><p>参数</p><ul><li><p><code>key</code>: <code>string</code></p><ul><li><p><code>key</code>格式: <code>componentName:componentKey:sourceKey</code></p></li><li><p>例如: <code>&quot;canvas:canvas:currentSpace&quot;</code></p></li></ul></li><li><p><code>fn</code>: <code>Function</code></p></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">subscribeSource</span><span class="token punctuation">(</span><span class="token string">&quot;canvas:canvas:currentSpace&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>space<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  setup<span class="token punctuation">.</span>amount<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    spaceId<span class="token operator">:</span> space<span class="token operator">?.</span>data<span class="token operator">?.</span>id<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exports" tabindex="-1"><a class="header-anchor" href="#exports" aria-hidden="true">#</a> exports()</h3><p>导出组件配置</p>`,39),J=n("p",null,"返回值",-1),Q=n("li",null,[n("p",null,[n("code",null,"ComponentOptions")])],-1),W={href:"/miniapp/help/type.html#componentoptions",target:"_blank",rel:"noopener noreferrer"},X=n("li",null,[n("p",null,"示例")],-1),Y=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> Componen <span class="token operator">=</span> instance<span class="token punctuation">.</span><span class="token function">exports</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1);function Z(nn,an){const s=i("ExternalLinkIcon");return p(),c("div",null,[u,n("div",d,[r,n("ul",null,[h,n("li",null,[a("参考： "),n("a",k,[a("ComponentType"),e(s)])])])]),m,n("div",v,[b,n("ul",null,[n("li",null,[a("参考："),n("a",g,[a("ComponentAction"),e(s)])])])]),f,n("div",_,[y,n("ul",null,[n("li",null,[a("参考："),n("a",x,[a("ComponentScript"),e(s)])])])]),q,n("div",C,[w,n("ul",null,[n("li",null,[a("参考："),n("a",S,[a("Layer"),e(s)])])])]),E,n("div",O,[A,n("ul",null,[n("li",null,[a("参考："),n("a",L,[a("Animation"),e(s)])])])]),D,n("div",I,[N,n("ul",null,[T,n("li",null,[a("参考："),n("a",B,[a("Source"),e(s)])])])]),R,n("ul",null,[n("li",null,[K,n("ul",null,[V,F,n("li",null,[n("p",null,[a("参考："),n("a",P,[a("ComponentOptions"),e(s)])])])])]),U]),H,n("ul",null,[n("li",null,[M,n("ul",null,[$,n("li",null,[n("p",null,[a("参考："),n("a",j,[a("ComponentOptions"),e(s)])])])])]),z]),G,n("ul",null,[n("li",null,[J,n("ul",null,[Q,n("li",null,[n("p",null,[a("参考："),n("a",W,[a("ComponentOptions"),e(s)])])])])]),X]),Y])}const en=o(l,[["render",Z],["__file","component.html.vue"]]);export{en as default};
