import{_ as p,r as l,o as i,c,a as n,b as a,d as s,e}from"./app.f18319b0.js";const u={},d=e(`<h1 id="layout-布局" tabindex="-1"><a class="header-anchor" href="#layout-布局" aria-hidden="true">#</a> Layout 布局</h1><p>实例化 <code>Layout</code></p><ul><li>示例</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> compList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> layout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">layout</span><span class="token punctuation">(</span>compList<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),r=n("p",null,"参数",-1),h=n("code",null,"list",-1),m=n("code",null,"Component[]",-1),k=n("h2",{id:"方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),a(" 方法")],-1),_=n("h3",{id:"add",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#add","aria-hidden":"true"},"#"),a(" add()")],-1),v=n("p",null,"给当前排列添加一个组件",-1),y=n("p",null,"参数",-1),g=n("li",null,[n("p",null,[n("code",null,"component"),a(": "),n("code",null,"Component | Component[]")])],-1),b={href:"/miniapp/api/component.html",target:"_blank",rel:"noopener noreferrer"},f=n("li",null,[n("p",null,"示例")],-1),x=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layout<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove()</h3><p>删除当前排列中的组件</p>`,3),w=n("p",null,"参数",-1),C=n("li",null,[n("p",null,[n("code",null,"component"),a(": "),n("code",null,"Component | Component[]")])],-1),q={href:"/miniapp/api/component.html",target:"_blank",rel:"noopener noreferrer"},L=n("li",null,[n("p",null,"示例")],-1),A=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layout<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="moveup" tabindex="-1"><a class="header-anchor" href="#moveup" aria-hidden="true">#</a> moveUp()</h3><p>组件层级 上移一层</p><ul><li><p>参数</p><ul><li><p><code>last</code>: <code>boolean</code></p><ul><li><code>last</code>取值: <code>true</code>为置顶，空为上移一层</li></ul></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layout<span class="token punctuation">.</span><span class="token function">moveUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 上移一层</span>
layout<span class="token punctuation">.</span><span class="token function">moveUp</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 置顶</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="movedown" tabindex="-1"><a class="header-anchor" href="#movedown" aria-hidden="true">#</a> moveDown()</h3><p>组件层级 下移一层</p><ul><li><p>参数</p><ul><li><p><code>last</code>: <code>boolean</code></p><ul><li><code>last</code>取值: <code>true</code>为置底，空为下移一层</li></ul></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layout<span class="token punctuation">.</span><span class="token function">moveDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 下移一层</span>
layout<span class="token punctuation">.</span><span class="token function">moveDown</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 置底</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="align" tabindex="-1"><a class="header-anchor" href="#align" aria-hidden="true">#</a> align()</h3><p>对齐</p>`,11),B=n("p",null,"参数",-1),V=n("li",null,[n("p",null,[n("code",null,"type"),a(": "),n("code",null,"AlignType")])],-1),j={href:"/miniapp/help/type.html#aligntype",target:"_blank",rel:"noopener noreferrer"},N=n("li",null,[n("p",null,"示例")],-1),T=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layout<span class="token punctuation">.</span><span class="token function">align</span><span class="token punctuation">(</span>AlignType<span class="token punctuation">.</span>VerticalStart<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="justify" tabindex="-1"><a class="header-anchor" href="#justify" aria-hidden="true">#</a> justify()</h3><p>排列方式：水平等间距，垂直等间距</p><ul><li><p>参数</p><ul><li><code>type</code>: <code>&quot;vertical&quot; | &quot;horizontal&quot;</code></li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layout<span class="token punctuation">.</span><span class="token function">justify</span><span class="token punctuation">(</span><span class="token string">&quot;vertical&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="auto" tabindex="-1"><a class="header-anchor" href="#auto" aria-hidden="true">#</a> auto()</h3><p>自动布局</p>`,7),D=n("p",null,"参数",-1),E=n("li",null,[n("p",null,[n("code",null,"options?"),a(": "),n("code",null,"AutoOptions")])],-1),U={href:"/miniapp/help/type.html#autooptions",target:"_blank",rel:"noopener noreferrer"},I=n("li",null,[n("p",null,"示例")],-1),O=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>layout<span class="token punctuation">.</span><span class="token function">auto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1);function S(z,F){const o=l("Badge"),t=l("ExternalLinkIcon");return i(),c("div",null,[d,n("ul",null,[n("li",null,[r,n("ul",null,[n("li",null,[h,a(": "),m,a(),s(o,{text:"必传"})])])])]),k,_,v,n("ul",null,[n("li",null,[y,n("ul",null,[g,n("li",null,[n("p",null,[a("参考："),n("a",b,[a("Component"),s(t)])])])])]),f]),x,n("ul",null,[n("li",null,[w,n("ul",null,[C,n("li",null,[n("p",null,[a("参考："),n("a",q,[a("Component"),s(t)])])])])]),L]),A,n("ul",null,[n("li",null,[B,n("ul",null,[V,n("li",null,[n("p",null,[a("参考："),n("a",j,[a("AlignType"),s(t)])])])])]),N]),T,n("ul",null,[n("li",null,[D,n("ul",null,[E,n("li",null,[n("p",null,[a("参考："),n("a",U,[a("AutoOptions"),s(t)])])])])]),I]),O])}const H=p(u,[["render",S],["__file","layout.html.vue"]]);export{H as default};
