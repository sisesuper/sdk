import{_ as c,r as l,o as i,c as u,a as n,b as s,d as a,w as o,e as t}from"./app.f18319b0.js";const r={},d={id:"tool",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#tool","aria-hidden":"true"},"#",-1),v=t(`<p>工具插件，提供了坐标转换，距离计算等方法</p><ul><li><p>插件名称</p><p><strong>tool</strong></p></li><li><p>初始参数</p><ul><li>无</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> webglPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tslfe/dt-enging&quot;</span>
<span class="token operator">...</span>省略获取meta实例的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> toolPlugin <span class="token operator">=</span> meta<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>webglPlugin<span class="token punctuation">.</span><span class="token function">tool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2>`,4),m={id:"buildcoordinateconvertor",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#buildcoordinateconvertor","aria-hidden":"true"},"#",-1),h=t(`<p>GPS 坐标转 三维坐标</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">buildCoordinateConvertor</span><span class="token operator">:</span> <span class="token punctuation">(</span>list<span class="token operator">:</span> <span class="token punctuation">{</span>
    gps<span class="token operator">:</span> GPSCoordinate<span class="token punctuation">;</span>
    vector3<span class="token operator">:</span> DTVector3<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">toGps</span><span class="token operator">:</span> <span class="token punctuation">(</span>vector3<span class="token operator">:</span> DTVector3<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> GPSCoordinate<span class="token punctuation">;</span>
    <span class="token function-variable function">toVector3</span><span class="token operator">:</span> <span class="token punctuation">(</span>gpsCoordinate<span class="token operator">:</span> GPSCoordinate<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> DTVector3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),g=n("p",null,"参数",-1),_=n("p",null,[n("code",null,"list:"),s(" 映射坐标列表（需要 "),n("strong",null,"至少一组"),s(" 坐标，其中包含一个 "),n("strong",null,"GPS 坐标"),s(" 和与该 GPS 坐标对应的一个 "),n("strong",null,"三维坐标"),s(" ）")],-1),y=n("p",null,[n("code",null,"gps:"),s(" GPS 坐标")],-1),f=n("p",null,[n("code",null,"vector3:"),s(" 与 GPS 坐标对应的三维坐标")],-1),x=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"{ toGps: (vector3: DTVector3) => GPSCoordinate, toVector3: (gpsCoordinate: GPSCoordinate) => DTVector3 }"),s(" 进行坐标转换计算的方法")])])],-1),P=n("li",null,[n("p",null,"示例")],-1),C=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载tool插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> convertor <span class="token operator">=</span> toolPlugin<span class="token punctuation">.</span><span class="token function">buildCoordinateConvertor</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        gps<span class="token operator">:</span> <span class="token punctuation">{</span>
            longitude<span class="token operator">:</span> <span class="token number">106.329885</span><span class="token punctuation">,</span>
            latitude<span class="token operator">:</span> <span class="token number">29.523628</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        vector3<span class="token operator">:</span> <span class="token punctuation">{</span>
            x<span class="token operator">:</span> <span class="token number">71.60103854004521</span><span class="token punctuation">,</span>
            y<span class="token operator">:</span> <span class="token number">11.918637026404012</span><span class="token punctuation">,</span>
            z<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">113.7915206911498</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        gps<span class="token operator">:</span> <span class="token punctuation">{</span>
            longitude<span class="token operator">:</span> <span class="token number">106.329822</span><span class="token punctuation">,</span>
            latitude<span class="token operator">:</span> <span class="token number">29.521502</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        vector3<span class="token operator">:</span> <span class="token punctuation">{</span>
            x<span class="token operator">:</span> <span class="token number">67.1776203071326</span><span class="token punctuation">,</span>
            y<span class="token operator">:</span> <span class="token number">8.306768067879771</span><span class="token punctuation">,</span>
            z<span class="token operator">:</span> <span class="token number">125.04338544723107</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// gps 转三维坐标</span>
convertor<span class="token punctuation">.</span><span class="token function">toVector3</span><span class="token punctuation">(</span><span class="token punctuation">{</span> longitude<span class="token operator">:</span> <span class="token number">106.32988</span><span class="token punctuation">,</span> latitude<span class="token operator">:</span> <span class="token number">29.522657</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 三维坐标转 GPS</span>
convertor<span class="token punctuation">.</span><span class="token function">toGps</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="calculatedistance" tabindex="-1"><a class="header-anchor" href="#calculatedistance" aria-hidden="true">#</a> calculateDistance( )</h3><p>计算多个点按顺序相连的直线距离和</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">calculateDistance</span><span class="token operator">:</span> <span class="token punctuation">(</span>list<span class="token operator">:</span> DTVector3<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),T=n("p",null,"参数",-1),V=n("p",null,[n("code",null,"list:"),s(" 三维坐标点列表")],-1),w=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"number:"),s(" 计算结果")])])],-1),D=n("li",null,[n("p",null,"示例")],-1),S=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载tool插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> distance <span class="token operator">=</span> toolPlugin<span class="token punctuation">.</span><span class="token function">calculateDistance</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createmeasure" tabindex="-1"><a class="header-anchor" href="#createmeasure" aria-hidden="true">#</a> createMeasure( )</h3><p>计算两点的直线距离</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">createMeasure</span><span class="token operator">:</span> <span class="token punctuation">(</span>position<span class="token operator">:</span> DTVector3<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>current<span class="token operator">:</span> DTVector3<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),G=n("p",null,"参数",-1),q=n("p",null,[n("code",null,"position:"),s(" 第一个点的三维坐标")],-1),z=n("p",null,"返回值",-1),N=n("p",null,[n("code",null,"(current: DTVector3) => number:"),s(" 进行距离计算的方法")],-1),B=n("p",null,"参数",-1),M=n("p",null,[n("code",null,"current:"),s(" 第二个点的三维坐标")],-1),L=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"number:"),s(" 距离计算结果")])])],-1),R=n("li",null,[n("p",null,"示例")],-1),E=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载tool插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> distance <span class="token operator">=</span> toolPlugin<span class="token punctuation">.</span><span class="token function">createMeasure</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="threecoordinatetoscreenpoint" tabindex="-1"><a class="header-anchor" href="#threecoordinatetoscreenpoint" aria-hidden="true">#</a> threeCoordinateToScreenPoint( )</h3><p>三维坐标转屏幕坐标</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">threeCoordinateToScreenPoint</span><span class="token operator">:</span> <span class="token punctuation">(</span>position<span class="token operator">:</span> DTVector3<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),j=n("p",null,"参数",-1),A=n("p",null,[n("code",null,"position:"),s(" 三维坐标点")],-1),F=n("li",null,[n("p",null,"返回值"),n("ul",null,[n("li",null,[n("code",null,"{x, y}:"),s(" 转换结果")])])],-1),H=n("li",null,[n("p",null,"示例")],-1),I=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载tool插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> screenPoint <span class="token operator">=</span> toolPlugin<span class="token punctuation">.</span><span class="token function">threeCoordinateToScreenPoint</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="screenpointtothreecoordinate" tabindex="-1"><a class="header-anchor" href="#screenpointtothreecoordinate" aria-hidden="true">#</a> screenPointToThreeCoordinate( )</h3><p>屏幕坐标转三维坐标</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function-variable function">screenPointToThreeCoordinate</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Vector3 <span class="token operator">|</span> <span class="token keyword">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li><p><code>x:</code> 屏幕 x 坐标</p></li><li><p><code>y:</code> 屏幕 y 坐标</p></li></ul></li><li><p>返回值</p><ul><li><code>Vector3:</code> 转换结果</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载tool插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> threePoint <span class="token operator">=</span> toolPlugin<span class="token punctuation">.</span><span class="token function">screenPointToThreeCoordinate</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),J={id:"containscomponent",tabindex:"-1"},K=n("a",{class:"header-anchor",href:"#containscomponent","aria-hidden":"true"},"#",-1),O=t(`<p>获取指定的包围区域内的所有模型</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> containsComponent<span class="token operator">:</span> <span class="token punctuation">(</span>positions<span class="token operator">:</span> DTVector3<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mode<span class="token operator">:</span> <span class="token string">&quot;all&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;x&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;y&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;z&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Component<span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>参数</p><ul><li><p><code>positions:</code> 三维坐标，需至少包含三个点才可构成一个包围区域</p></li><li><p><code>mode:</code> 包围模式；all: 整体全部包围；x: 忽略x轴；y: 忽略y轴；z: 忽略z轴</p></li></ul></li><li><p>返回值</p><ul><li><code>Component[]:</code> 被包围的模型列表</li></ul></li><li><p>示例</p></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">...</span>省略挂载tool插件的步骤<span class="token operator">...</span>

<span class="token keyword">const</span> threePoint <span class="token operator">=</span> toolPlugin<span class="token punctuation">.</span><span class="token function">containsComponent</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>三维点坐标<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function Q(U,W){const p=l("badge"),e=l("RouterLink");return i(),u("div",null,[n("h1",d,[k,s(" tool "),a(p,{type:"danger",text:"v4.1.4"})]),v,n("h3",m,[b,s(" buildCoordinateConvertor( ) "),a(p,{type:"danger",text:"v4.1.4"})]),h,n("ul",null,[n("li",null,[g,n("ul",null,[n("li",null,[_,n("ul",null,[n("li",null,[y,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#gpscoordinate"},{default:o(()=>[s("GPSCoordinate")]),_:1})])])]),n("li",null,[f,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#dtvector3"},{default:o(()=>[s("DTVector3")]),_:1})])])])])])])]),x,P]),C,n("ul",null,[n("li",null,[T,n("ul",null,[n("li",null,[V,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#dtvector3"},{default:o(()=>[s("DTVector3")]),_:1})])])])])]),w,D]),S,n("ul",null,[n("li",null,[G,n("ul",null,[n("li",null,[q,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#dtvector3"},{default:o(()=>[s("DTVector3")]),_:1})])])])])]),n("li",null,[z,n("ul",null,[n("li",null,[N,n("ul",null,[n("li",null,[B,n("ul",null,[n("li",null,[M,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#dtvector3"},{default:o(()=>[s("DTVector3")]),_:1})])])])])]),L])])])]),R]),E,n("ul",null,[n("li",null,[j,n("ul",null,[n("li",null,[A,n("ul",null,[n("li",null,[s("参考: "),a(e,{to:"/three/help/declare.html#dtvector3"},{default:o(()=>[s("DTVector3")]),_:1})])])])])]),F,H]),I,n("h3",J,[K,s(" containsComponent( ) "),a(p,{type:"danger",text:"v4.1.4"})]),O])}const Y=c(r,[["render",Q],["__file","tool.html.vue"]]);export{Y as default};
